{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "Mk6qjezc8tPu"
   },
   "source": [
    "# Quiz Pekan - 3\n",
    "\n",
    "Dataset-dataset berikut ini menunjukkan persentase fat, protein, dan food yang dikonsumsi dari setiap jenis makanan yang terdaftar. Beberapa bagian akhir dataset juga mencakup persentase obesitas(Obesity), kurang gizi(Undernourished), dan kasus COVID-19 yang Terkonfirmasi(Confirmed)/Kematian(Deaths)/Sembuh(Recovered)/Aktif(Active).\n",
    "\n",
    "(Catatan: Semua data memiliki unit '%' (persen) kecuali Populasi, unit persen tersebut dihitung berdasarkan jumlah populasi).\n",
    "\n",
    "Link Download:\n",
    "\n",
    "[Food_Supply_Quantity_kg_Data.csv](https://drive.google.com/uc?export=download&id=1cxisB1V00IBTDmuogSUCKQsmfmuwWRD5)\n",
    "\n",
    "[Protein_Supply_Quantity_Data.csv](https://drive.google.com/uc?export=download&id=1g0WrtQrsQ8gXTOAVe-zyWTL2BaMFS6KX)\n",
    "\n",
    "[Fat_Supply_Quantity_Data.csv](https://drive.google.com/uc?export=download&id=1Zeza76v_VH3i6fjP1eHOjfZ2xWQDY0Qp)\n",
    "\n",
    "[Supply_Food_Data_Descriptions.csv](https://drive.google.com/uc?export=download&id=11JJ1CVbxaTWo8RSm8KmkrBCqHwCTIykh)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "NGNbQVKm4vgv"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Alcoholic Beverages</th>\n",
       "      <th>Animal fats</th>\n",
       "      <th>Animal Products</th>\n",
       "      <th>Aquatic Products, Other</th>\n",
       "      <th>Cereals - Excluding Beer</th>\n",
       "      <th>Eggs</th>\n",
       "      <th>Fish, Seafood</th>\n",
       "      <th>Fruits - Excluding Wine</th>\n",
       "      <th>Meat</th>\n",
       "      <th>...</th>\n",
       "      <th>Vegetables</th>\n",
       "      <th>Vegetal Products</th>\n",
       "      <th>Obesity</th>\n",
       "      <th>Undernourished</th>\n",
       "      <th>Confirmed</th>\n",
       "      <th>Deaths</th>\n",
       "      <th>Recovered</th>\n",
       "      <th>Active</th>\n",
       "      <th>Population</th>\n",
       "      <th>Unit (all except Population)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>0.0014</td>\n",
       "      <td>0.1973</td>\n",
       "      <td>9.4341</td>\n",
       "      <td>0.0</td>\n",
       "      <td>24.8097</td>\n",
       "      <td>0.2099</td>\n",
       "      <td>0.0350</td>\n",
       "      <td>5.3495</td>\n",
       "      <td>1.2020</td>\n",
       "      <td>...</td>\n",
       "      <td>6.7642</td>\n",
       "      <td>40.5645</td>\n",
       "      <td>4.5</td>\n",
       "      <td>29.8</td>\n",
       "      <td>0.098885</td>\n",
       "      <td>0.003635</td>\n",
       "      <td>0.078496</td>\n",
       "      <td>0.016754</td>\n",
       "      <td>38928000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>1.6719</td>\n",
       "      <td>0.1357</td>\n",
       "      <td>18.7684</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.7817</td>\n",
       "      <td>0.5815</td>\n",
       "      <td>0.2126</td>\n",
       "      <td>6.7861</td>\n",
       "      <td>1.8845</td>\n",
       "      <td>...</td>\n",
       "      <td>11.7753</td>\n",
       "      <td>31.2304</td>\n",
       "      <td>22.3</td>\n",
       "      <td>6.2</td>\n",
       "      <td>0.366667</td>\n",
       "      <td>0.011240</td>\n",
       "      <td>0.217970</td>\n",
       "      <td>0.137456</td>\n",
       "      <td>2838000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>0.2711</td>\n",
       "      <td>0.0282</td>\n",
       "      <td>9.6334</td>\n",
       "      <td>0.0</td>\n",
       "      <td>13.6816</td>\n",
       "      <td>0.5277</td>\n",
       "      <td>0.2416</td>\n",
       "      <td>6.3801</td>\n",
       "      <td>1.1305</td>\n",
       "      <td>...</td>\n",
       "      <td>11.6484</td>\n",
       "      <td>40.3651</td>\n",
       "      <td>26.6</td>\n",
       "      <td>3.9</td>\n",
       "      <td>0.105176</td>\n",
       "      <td>0.003521</td>\n",
       "      <td>0.074363</td>\n",
       "      <td>0.027292</td>\n",
       "      <td>44357000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Angola</td>\n",
       "      <td>5.8087</td>\n",
       "      <td>0.0560</td>\n",
       "      <td>4.9278</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.1085</td>\n",
       "      <td>0.0587</td>\n",
       "      <td>1.7707</td>\n",
       "      <td>6.0005</td>\n",
       "      <td>2.0571</td>\n",
       "      <td>...</td>\n",
       "      <td>2.3041</td>\n",
       "      <td>45.0722</td>\n",
       "      <td>6.8</td>\n",
       "      <td>25</td>\n",
       "      <td>0.009166</td>\n",
       "      <td>0.000369</td>\n",
       "      <td>0.003736</td>\n",
       "      <td>0.005061</td>\n",
       "      <td>32522000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Antigua and Barbuda</td>\n",
       "      <td>3.5764</td>\n",
       "      <td>0.0087</td>\n",
       "      <td>16.6613</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.9960</td>\n",
       "      <td>0.2274</td>\n",
       "      <td>4.1489</td>\n",
       "      <td>10.7451</td>\n",
       "      <td>5.6888</td>\n",
       "      <td>...</td>\n",
       "      <td>5.4495</td>\n",
       "      <td>33.3233</td>\n",
       "      <td>19.1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.096939</td>\n",
       "      <td>0.003061</td>\n",
       "      <td>0.092857</td>\n",
       "      <td>0.001020</td>\n",
       "      <td>98000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               Country  Alcoholic Beverages  Animal fats  Animal Products  \\\n",
       "0          Afghanistan               0.0014       0.1973           9.4341   \n",
       "1              Albania               1.6719       0.1357          18.7684   \n",
       "2              Algeria               0.2711       0.0282           9.6334   \n",
       "3               Angola               5.8087       0.0560           4.9278   \n",
       "4  Antigua and Barbuda               3.5764       0.0087          16.6613   \n",
       "\n",
       "   Aquatic Products, Other  Cereals - Excluding Beer    Eggs  Fish, Seafood  \\\n",
       "0                      0.0                   24.8097  0.2099         0.0350   \n",
       "1                      0.0                    5.7817  0.5815         0.2126   \n",
       "2                      0.0                   13.6816  0.5277         0.2416   \n",
       "3                      0.0                    9.1085  0.0587         1.7707   \n",
       "4                      0.0                    5.9960  0.2274         4.1489   \n",
       "\n",
       "   Fruits - Excluding Wine    Meat  ...  Vegetables  Vegetal Products  \\\n",
       "0                   5.3495  1.2020  ...      6.7642           40.5645   \n",
       "1                   6.7861  1.8845  ...     11.7753           31.2304   \n",
       "2                   6.3801  1.1305  ...     11.6484           40.3651   \n",
       "3                   6.0005  2.0571  ...      2.3041           45.0722   \n",
       "4                  10.7451  5.6888  ...      5.4495           33.3233   \n",
       "\n",
       "   Obesity  Undernourished  Confirmed    Deaths  Recovered    Active  \\\n",
       "0      4.5            29.8   0.098885  0.003635   0.078496  0.016754   \n",
       "1     22.3             6.2   0.366667  0.011240   0.217970  0.137456   \n",
       "2     26.6             3.9   0.105176  0.003521   0.074363  0.027292   \n",
       "3      6.8              25   0.009166  0.000369   0.003736  0.005061   \n",
       "4     19.1             NaN   0.096939  0.003061   0.092857  0.001020   \n",
       "\n",
       "   Population  Unit (all except Population)  \n",
       "0  38928000.0                             %  \n",
       "1   2838000.0                             %  \n",
       "2  44357000.0                             %  \n",
       "3  32522000.0                             %  \n",
       "4     98000.0                             %  \n",
       "\n",
       "[5 rows x 32 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Alcoholic Beverages</th>\n",
       "      <th>Animal Products</th>\n",
       "      <th>Animal fats</th>\n",
       "      <th>Aquatic Products, Other</th>\n",
       "      <th>Cereals - Excluding Beer</th>\n",
       "      <th>Eggs</th>\n",
       "      <th>Fish, Seafood</th>\n",
       "      <th>Fruits - Excluding Wine</th>\n",
       "      <th>Meat</th>\n",
       "      <th>...</th>\n",
       "      <th>Vegetables</th>\n",
       "      <th>Miscellaneous</th>\n",
       "      <th>Obesity</th>\n",
       "      <th>Undernourished</th>\n",
       "      <th>Confirmed</th>\n",
       "      <th>Deaths</th>\n",
       "      <th>Recovered</th>\n",
       "      <th>Active</th>\n",
       "      <th>Population</th>\n",
       "      <th>Unit (all except Population)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>9.7523</td>\n",
       "      <td>0.0277</td>\n",
       "      <td>0.0</td>\n",
       "      <td>35.9771</td>\n",
       "      <td>0.4067</td>\n",
       "      <td>0.0647</td>\n",
       "      <td>0.5824</td>\n",
       "      <td>3.1337</td>\n",
       "      <td>...</td>\n",
       "      <td>1.1370</td>\n",
       "      <td>0.0462</td>\n",
       "      <td>4.5</td>\n",
       "      <td>29.8</td>\n",
       "      <td>0.098885</td>\n",
       "      <td>0.003635</td>\n",
       "      <td>0.078496</td>\n",
       "      <td>0.016754</td>\n",
       "      <td>38928000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>0.1840</td>\n",
       "      <td>27.7469</td>\n",
       "      <td>0.0711</td>\n",
       "      <td>0.0</td>\n",
       "      <td>14.2331</td>\n",
       "      <td>1.8069</td>\n",
       "      <td>0.6274</td>\n",
       "      <td>1.2757</td>\n",
       "      <td>7.6582</td>\n",
       "      <td>...</td>\n",
       "      <td>3.2456</td>\n",
       "      <td>0.0544</td>\n",
       "      <td>22.3</td>\n",
       "      <td>6.2</td>\n",
       "      <td>0.366667</td>\n",
       "      <td>0.011240</td>\n",
       "      <td>0.217970</td>\n",
       "      <td>0.137456</td>\n",
       "      <td>2838000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>0.0323</td>\n",
       "      <td>13.8360</td>\n",
       "      <td>0.0054</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.5633</td>\n",
       "      <td>1.2916</td>\n",
       "      <td>0.6350</td>\n",
       "      <td>1.1624</td>\n",
       "      <td>3.5088</td>\n",
       "      <td>...</td>\n",
       "      <td>3.1267</td>\n",
       "      <td>0.1399</td>\n",
       "      <td>26.6</td>\n",
       "      <td>3.9</td>\n",
       "      <td>0.105176</td>\n",
       "      <td>0.003521</td>\n",
       "      <td>0.074363</td>\n",
       "      <td>0.027292</td>\n",
       "      <td>44357000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Angola</td>\n",
       "      <td>0.6285</td>\n",
       "      <td>15.2311</td>\n",
       "      <td>0.0277</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.3882</td>\n",
       "      <td>0.1756</td>\n",
       "      <td>5.4436</td>\n",
       "      <td>1.2754</td>\n",
       "      <td>7.6248</td>\n",
       "      <td>...</td>\n",
       "      <td>0.8133</td>\n",
       "      <td>0.0924</td>\n",
       "      <td>6.8</td>\n",
       "      <td>25</td>\n",
       "      <td>0.009166</td>\n",
       "      <td>0.000369</td>\n",
       "      <td>0.003736</td>\n",
       "      <td>0.005061</td>\n",
       "      <td>32522000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Antigua and Barbuda</td>\n",
       "      <td>0.1535</td>\n",
       "      <td>33.1901</td>\n",
       "      <td>0.1289</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.5108</td>\n",
       "      <td>0.4850</td>\n",
       "      <td>8.2146</td>\n",
       "      <td>1.2586</td>\n",
       "      <td>16.0670</td>\n",
       "      <td>...</td>\n",
       "      <td>1.6024</td>\n",
       "      <td>0.2947</td>\n",
       "      <td>19.1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.096939</td>\n",
       "      <td>0.003061</td>\n",
       "      <td>0.092857</td>\n",
       "      <td>0.001020</td>\n",
       "      <td>98000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               Country  Alcoholic Beverages  Animal Products  Animal fats  \\\n",
       "0          Afghanistan               0.0000           9.7523       0.0277   \n",
       "1              Albania               0.1840          27.7469       0.0711   \n",
       "2              Algeria               0.0323          13.8360       0.0054   \n",
       "3               Angola               0.6285          15.2311       0.0277   \n",
       "4  Antigua and Barbuda               0.1535          33.1901       0.1289   \n",
       "\n",
       "   Aquatic Products, Other  Cereals - Excluding Beer    Eggs  Fish, Seafood  \\\n",
       "0                      0.0                   35.9771  0.4067         0.0647   \n",
       "1                      0.0                   14.2331  1.8069         0.6274   \n",
       "2                      0.0                   26.5633  1.2916         0.6350   \n",
       "3                      0.0                   20.3882  0.1756         5.4436   \n",
       "4                      0.0                   10.5108  0.4850         8.2146   \n",
       "\n",
       "   Fruits - Excluding Wine     Meat  ...  Vegetables  Miscellaneous  Obesity  \\\n",
       "0                   0.5824   3.1337  ...      1.1370         0.0462      4.5   \n",
       "1                   1.2757   7.6582  ...      3.2456         0.0544     22.3   \n",
       "2                   1.1624   3.5088  ...      3.1267         0.1399     26.6   \n",
       "3                   1.2754   7.6248  ...      0.8133         0.0924      6.8   \n",
       "4                   1.2586  16.0670  ...      1.6024         0.2947     19.1   \n",
       "\n",
       "   Undernourished  Confirmed    Deaths  Recovered    Active  Population  \\\n",
       "0            29.8   0.098885  0.003635   0.078496  0.016754  38928000.0   \n",
       "1             6.2   0.366667  0.011240   0.217970  0.137456   2838000.0   \n",
       "2             3.9   0.105176  0.003521   0.074363  0.027292  44357000.0   \n",
       "3              25   0.009166  0.000369   0.003736  0.005061  32522000.0   \n",
       "4             NaN   0.096939  0.003061   0.092857  0.001020     98000.0   \n",
       "\n",
       "   Unit (all except Population)  \n",
       "0                             %  \n",
       "1                             %  \n",
       "2                             %  \n",
       "3                             %  \n",
       "4                             %  \n",
       "\n",
       "[5 rows x 32 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Alcoholic Beverages</th>\n",
       "      <th>Animal Products</th>\n",
       "      <th>Animal fats</th>\n",
       "      <th>Aquatic Products, Other</th>\n",
       "      <th>Cereals - Excluding Beer</th>\n",
       "      <th>Eggs</th>\n",
       "      <th>Fish, Seafood</th>\n",
       "      <th>Fruits - Excluding Wine</th>\n",
       "      <th>Meat</th>\n",
       "      <th>...</th>\n",
       "      <th>Vegetable Oils</th>\n",
       "      <th>Vegetables</th>\n",
       "      <th>Obesity</th>\n",
       "      <th>Undernourished</th>\n",
       "      <th>Confirmed</th>\n",
       "      <th>Deaths</th>\n",
       "      <th>Recovered</th>\n",
       "      <th>Active</th>\n",
       "      <th>Population</th>\n",
       "      <th>Unit (all except Population)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>0.0</td>\n",
       "      <td>21.6397</td>\n",
       "      <td>6.2224</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.0353</td>\n",
       "      <td>0.6859</td>\n",
       "      <td>0.0327</td>\n",
       "      <td>0.4246</td>\n",
       "      <td>6.1244</td>\n",
       "      <td>...</td>\n",
       "      <td>17.0831</td>\n",
       "      <td>0.3593</td>\n",
       "      <td>4.5</td>\n",
       "      <td>29.8</td>\n",
       "      <td>0.098885</td>\n",
       "      <td>0.003635</td>\n",
       "      <td>0.078496</td>\n",
       "      <td>0.016754</td>\n",
       "      <td>38928000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>0.0</td>\n",
       "      <td>32.0002</td>\n",
       "      <td>3.4172</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.6734</td>\n",
       "      <td>1.6448</td>\n",
       "      <td>0.1445</td>\n",
       "      <td>0.6418</td>\n",
       "      <td>8.7428</td>\n",
       "      <td>...</td>\n",
       "      <td>9.2443</td>\n",
       "      <td>0.6503</td>\n",
       "      <td>22.3</td>\n",
       "      <td>6.2</td>\n",
       "      <td>0.366667</td>\n",
       "      <td>0.011240</td>\n",
       "      <td>0.217970</td>\n",
       "      <td>0.137456</td>\n",
       "      <td>2838000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>0.0</td>\n",
       "      <td>14.4175</td>\n",
       "      <td>0.8972</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.2035</td>\n",
       "      <td>1.2171</td>\n",
       "      <td>0.2008</td>\n",
       "      <td>0.5772</td>\n",
       "      <td>3.8961</td>\n",
       "      <td>...</td>\n",
       "      <td>27.3606</td>\n",
       "      <td>0.5145</td>\n",
       "      <td>26.6</td>\n",
       "      <td>3.9</td>\n",
       "      <td>0.105176</td>\n",
       "      <td>0.003521</td>\n",
       "      <td>0.074363</td>\n",
       "      <td>0.027292</td>\n",
       "      <td>44357000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Angola</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.3041</td>\n",
       "      <td>1.3130</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.5545</td>\n",
       "      <td>0.1539</td>\n",
       "      <td>1.4155</td>\n",
       "      <td>0.3488</td>\n",
       "      <td>11.0268</td>\n",
       "      <td>...</td>\n",
       "      <td>22.4638</td>\n",
       "      <td>0.1231</td>\n",
       "      <td>6.8</td>\n",
       "      <td>25</td>\n",
       "      <td>0.009166</td>\n",
       "      <td>0.000369</td>\n",
       "      <td>0.003736</td>\n",
       "      <td>0.005061</td>\n",
       "      <td>32522000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Antigua and Barbuda</td>\n",
       "      <td>0.0</td>\n",
       "      <td>27.7033</td>\n",
       "      <td>4.6686</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.2153</td>\n",
       "      <td>0.3872</td>\n",
       "      <td>1.5263</td>\n",
       "      <td>1.2177</td>\n",
       "      <td>14.3202</td>\n",
       "      <td>...</td>\n",
       "      <td>14.4436</td>\n",
       "      <td>0.2469</td>\n",
       "      <td>19.1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.096939</td>\n",
       "      <td>0.003061</td>\n",
       "      <td>0.092857</td>\n",
       "      <td>0.001020</td>\n",
       "      <td>98000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               Country  Alcoholic Beverages  Animal Products  Animal fats  \\\n",
       "0          Afghanistan                  0.0          21.6397       6.2224   \n",
       "1              Albania                  0.0          32.0002       3.4172   \n",
       "2              Algeria                  0.0          14.4175       0.8972   \n",
       "3               Angola                  0.0          15.3041       1.3130   \n",
       "4  Antigua and Barbuda                  0.0          27.7033       4.6686   \n",
       "\n",
       "   Aquatic Products, Other  Cereals - Excluding Beer    Eggs  Fish, Seafood  \\\n",
       "0                      0.0                    8.0353  0.6859         0.0327   \n",
       "1                      0.0                    2.6734  1.6448         0.1445   \n",
       "2                      0.0                    4.2035  1.2171         0.2008   \n",
       "3                      0.0                    6.5545  0.1539         1.4155   \n",
       "4                      0.0                    3.2153  0.3872         1.5263   \n",
       "\n",
       "   Fruits - Excluding Wine     Meat  ...  Vegetable Oils  Vegetables  Obesity  \\\n",
       "0                   0.4246   6.1244  ...         17.0831      0.3593      4.5   \n",
       "1                   0.6418   8.7428  ...          9.2443      0.6503     22.3   \n",
       "2                   0.5772   3.8961  ...         27.3606      0.5145     26.6   \n",
       "3                   0.3488  11.0268  ...         22.4638      0.1231      6.8   \n",
       "4                   1.2177  14.3202  ...         14.4436      0.2469     19.1   \n",
       "\n",
       "   Undernourished  Confirmed    Deaths  Recovered    Active  Population  \\\n",
       "0            29.8   0.098885  0.003635   0.078496  0.016754  38928000.0   \n",
       "1             6.2   0.366667  0.011240   0.217970  0.137456   2838000.0   \n",
       "2             3.9   0.105176  0.003521   0.074363  0.027292  44357000.0   \n",
       "3              25   0.009166  0.000369   0.003736  0.005061  32522000.0   \n",
       "4             NaN   0.096939  0.003061   0.092857  0.001020     98000.0   \n",
       "\n",
       "   Unit (all except Population)  \n",
       "0                             %  \n",
       "1                             %  \n",
       "2                             %  \n",
       "3                             %  \n",
       "4                             %  \n",
       "\n",
       "[5 rows x 32 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Categories</th>\n",
       "      <th>Items</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Alcoholic Beverages</td>\n",
       "      <td>Alcohol, Non-Food; Beer; Beverages, Alcoholic;...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Animal fats</td>\n",
       "      <td>Butter, Ghee; Cream; Fats, Animals, Raw; Fish,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Animal Products</td>\n",
       "      <td>Aquatic Animals, Others; Aquatic Plants; Bovin...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Aquatic Products, Other</td>\n",
       "      <td>Aquatic Animals, Others; Aquatic Plants; Meat,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Cereals - Excluding Beer</td>\n",
       "      <td>Barley and products; Cereals, Other; Maize and...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 Categories                                              Items\n",
       "0       Alcoholic Beverages  Alcohol, Non-Food; Beer; Beverages, Alcoholic;...\n",
       "1               Animal fats  Butter, Ghee; Cream; Fats, Animals, Raw; Fish,...\n",
       "2           Animal Products  Aquatic Animals, Others; Aquatic Plants; Bovin...\n",
       "3   Aquatic Products, Other  Aquatic Animals, Others; Aquatic Plants; Meat,...\n",
       "4  Cereals - Excluding Beer  Barley and products; Cereals, Other; Maize and..."
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Import Semua Data\n",
    "df_food = pd.read_csv('Food_Supply_Quantity_kg_Data.csv')\n",
    "df_protein = pd.read_csv('Protein_Supply_Quantity_Data.csv')\n",
    "df_fat = pd.read_csv('Fat_Supply_Quantity_Data.csv')\n",
    "df_category = pd.read_csv('Supply_Food_Data_Descriptions.csv')\n",
    "\n",
    "display(df_food.head())\n",
    "display(df_protein.head())\n",
    "display(df_fat.head())\n",
    "display(df_category.head())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "Aj2MY336-ylZ"
   },
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "xWD8Zh-r_TxA"
   },
   "source": [
    "# Soal 1: Memisahkan kolom pada supply dataset antara kategori makanan dan bukan makanan"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "s4OM-RnaAQKl"
   },
   "source": [
    "Teman-teman diminta untuk menampilkan list kolom-kolom pada supply DataFrame dengan ketentuan sebagai berikut:\n",
    "\n",
    "*   all columns: list yang berisikan semua kolom pada supply DataFrame\n",
    "*   supply columns: list yang berisikan semua kolom pada supply DataFrame berdasarkan kolom 'Categories' pada DataFrame df_category\n",
    "*   non-supply columns: list yang berisikan semua kolom non-supply pada supply DataFrame\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "8aHiCSZh5q1g"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "All Columns : ['Country', 'Alcoholic Beverages', 'Animal fats', 'Animal Products', 'Aquatic Products, Other', 'Cereals - Excluding Beer', 'Eggs', 'Fish, Seafood', 'Fruits - Excluding Wine', 'Meat', 'Milk - Excluding Butter', 'Miscellaneous', 'Offals', 'Oilcrops', 'Pulses', 'Spices', 'Starchy Roots', 'Stimulants', 'Sugar & Sweeteners', 'Sugar Crops', 'Treenuts', 'Vegetable Oils', 'Vegetables', 'Vegetal Products', 'Obesity', 'Undernourished', 'Confirmed', 'Deaths', 'Recovered', 'Active', 'Population', 'Unit (all except Population)']\n",
      " \n",
      "Supply Columns : ['Alcoholic Beverages', 'Animal fats', 'Animal Products', 'Aquatic Products, Other', 'Cereals - Excluding Beer', 'Eggs', 'Fish, Seafood', 'Fruits - Excluding Wine', 'Meat', 'Milk - Excluding Butter', 'Miscellaneous', 'Offals', 'Oilcrops', 'Pulses', 'Spices', 'Starchy Roots', 'Stimulants', 'Sugar & Sweeteners', 'Sugar Crops', 'Treenuts', 'Vegetable Oils', 'Vegetables', 'Vegetal Products']\n",
      " \n",
      "Non Supply Columns : ['Country', 'Obesity', 'Undernourished', 'Confirmed', 'Deaths', 'Recovered', 'Active', 'Population', 'Unit (all except Population)']\n"
     ]
    }
   ],
   "source": [
    "# Example\n",
    "#all_columns = df_food.columns.tolist()\n",
    "#print(f'All Columns : {all_columns} \\n\\n')\n",
    "\n",
    "# Code here\n",
    "all_columns = list(df_food.columns)\n",
    "print(\"All Columns : {}\".format(all_columns))\n",
    "print(\" \")\n",
    "\n",
    "supply_columns = list(df_category['Categories'])\n",
    "print(\"Supply Columns : {}\".format(supply_columns))\n",
    "print(\" \")\n",
    "\n",
    "non_supply_columns = [i for i in all_columns if i not in supply_columns]\n",
    "print(\"Non Supply Columns : {}\".format(non_supply_columns))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "A84xqzyoC0jU"
   },
   "source": [
    "Expected Output:\n",
    "\n",
    "![Expected Output:](https://drive.google.com/uc?id=1ItjI9ALd2I8tgJ2i8pa_UjdFfKS35mNu)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "gnRBLXPZC3PD"
   },
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "zVjfRh2xDC8g"
   },
   "source": [
    "# Soal 2: Menggabungkan DataFrame\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "-xRZSuKBDYeQ"
   },
   "source": [
    "Gabungkan semua supply DataFrame dengan ketentuan tidak ada kolom dengan nama yang sama. Untuk kolom-kolom non-supply seperti tersebut di atas, memiliki nilai yang sama untuk setiap DataFrame, sehingga cukup ambil dari salah satu DataFrame. Sedangkan untuk kolom-kolom supply seperti tersebut di atas, setiap DataFrame (df_food, df_protein, df_fat) memiliki nilai yang berbeda, sehingga teman-teman perlu menambahkan suffix berdasarkan jenis supply DataFrame-nya, misalkan untuk kolom 'eggs' teman teman harus menambahkan suffix sehingga DataFrame gabungan memiliki kolom 'eggs_food', 'eggs_protein', dan 'eggs_fat'. Untuk mendapatkan gambaran lebih jelas, silahkan lihat pada expected output."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "UWBJLohAKODF"
   },
   "source": [
    "List kolom-kolom DataFrame hasil gabungan adalah sebagai berikut:\n",
    "\n",
    "\n",
    "```\n",
    " ['Country', 'Alcoholic Beverages_food', 'Animal fats_food',\n",
    "  'Animal Products_food', 'Aquatic Products, Other_food',\n",
    "  'Cereals - Excluding Beer_food', 'Eggs_food', 'Fish, Seafood_food',\n",
    "  'Fruits - Excluding Wine_food', 'Meat_food',\n",
    "  'Milk - Excluding Butter_food', 'Miscellaneous_food', 'Offals_food',\n",
    "  'Oilcrops_food', 'Pulses_food', 'Spices_food', 'Starchy Roots_food',\n",
    "  'Stimulants_food', 'Sugar & Sweeteners_food', 'Sugar Crops_food',\n",
    "  'Treenuts_food', 'Vegetable Oils_food', 'Vegetables_food',\n",
    "  'Vegetal Products_food', 'Alcoholic Beverages_protein',\n",
    "  'Animal fats_protein', 'Animal Products_protein',\n",
    "  'Aquatic Products, Other_protein', 'Cereals - Excluding Beer_protein',\n",
    "  'Eggs_protein', 'Fish, Seafood_protein',\n",
    "  'Fruits - Excluding Wine_protein', 'Meat_protein',\n",
    "  'Milk - Excluding Butter_protein', 'Miscellaneous_protein',\n",
    "  'Offals_protein', 'Oilcrops_protein', 'Pulses_protein',\n",
    "  'Spices_protein', 'Starchy Roots_protein', 'Stimulants_protein',\n",
    "  'Sugar & Sweeteners_protein', 'Sugar Crops_protein', 'Treenuts_protein',\n",
    "  'Vegetable Oils_protein', 'Vegetables_protein',\n",
    "  'Vegetal Products_protein', 'Alcoholic Beverages_fat',\n",
    "  'Animal fats_fat', 'Animal Products_fat', 'Aquatic Products, Other_fat',\n",
    "  'Cereals - Excluding Beer_fat', 'Eggs_fat', 'Fish, Seafood_fat',\n",
    "  'Fruits - Excluding Wine_fat', 'Meat_fat',\n",
    "  'Milk - Excluding Butter_fat', 'Miscellaneous_fat', 'Offals_fat',\n",
    "  'Oilcrops_fat', 'Pulses_fat', 'Spices_fat', 'Starchy Roots_fat',\n",
    "  'Stimulants_fat', 'Sugar & Sweeteners_fat', 'Sugar Crops_fat',\n",
    "  'Treenuts_fat', 'Vegetable Oils_fat', 'Vegetables_fat',\n",
    "  'Vegetal Products_fat', 'Obesity', 'Undernourished', 'Confirmed',\n",
    "  'Deaths', 'Recovered', 'Active', 'Population',\n",
    "  'Unit (all except Population)']\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "v8_WdQrCFvbY"
   },
   "outputs": [],
   "source": [
    "# Hint\n",
    "df_non_supply_new = df_food[non_supply_columns]\n",
    "df_food_new = df_food[['Country']+supply_columns]\n",
    "df_protein_new = df_protein[['Country']+supply_columns]\n",
    "df_fat_new = df_fat[['Country']+supply_columns]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "jtV0pJZGFwne"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Alcoholic Beverages_food</th>\n",
       "      <th>Animal fats_food</th>\n",
       "      <th>Animal Products_food</th>\n",
       "      <th>Aquatic Products, Other_food</th>\n",
       "      <th>Cereals - Excluding Beer_food</th>\n",
       "      <th>Eggs_food</th>\n",
       "      <th>Fish, Seafood_food</th>\n",
       "      <th>Fruits - Excluding Wine_food</th>\n",
       "      <th>Meat_food</th>\n",
       "      <th>...</th>\n",
       "      <th>Vegetables_fat</th>\n",
       "      <th>Vegetal Products_fat</th>\n",
       "      <th>Obesity</th>\n",
       "      <th>Undernourished</th>\n",
       "      <th>Confirmed</th>\n",
       "      <th>Deaths</th>\n",
       "      <th>Recovered</th>\n",
       "      <th>Active</th>\n",
       "      <th>Population</th>\n",
       "      <th>Unit (all except Population)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>0.0014</td>\n",
       "      <td>0.1973</td>\n",
       "      <td>9.4341</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>24.8097</td>\n",
       "      <td>0.2099</td>\n",
       "      <td>0.0350</td>\n",
       "      <td>5.3495</td>\n",
       "      <td>1.2020</td>\n",
       "      <td>...</td>\n",
       "      <td>0.3593</td>\n",
       "      <td>28.3684</td>\n",
       "      <td>4.5</td>\n",
       "      <td>29.8</td>\n",
       "      <td>0.098885</td>\n",
       "      <td>0.003635</td>\n",
       "      <td>0.078496</td>\n",
       "      <td>0.016754</td>\n",
       "      <td>38928000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>1.6719</td>\n",
       "      <td>0.1357</td>\n",
       "      <td>18.7684</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>5.7817</td>\n",
       "      <td>0.5815</td>\n",
       "      <td>0.2126</td>\n",
       "      <td>6.7861</td>\n",
       "      <td>1.8845</td>\n",
       "      <td>...</td>\n",
       "      <td>0.6503</td>\n",
       "      <td>17.9998</td>\n",
       "      <td>22.3</td>\n",
       "      <td>6.2</td>\n",
       "      <td>0.366667</td>\n",
       "      <td>0.011240</td>\n",
       "      <td>0.217970</td>\n",
       "      <td>0.137456</td>\n",
       "      <td>2838000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>0.2711</td>\n",
       "      <td>0.0282</td>\n",
       "      <td>9.6334</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>13.6816</td>\n",
       "      <td>0.5277</td>\n",
       "      <td>0.2416</td>\n",
       "      <td>6.3801</td>\n",
       "      <td>1.1305</td>\n",
       "      <td>...</td>\n",
       "      <td>0.5145</td>\n",
       "      <td>35.5857</td>\n",
       "      <td>26.6</td>\n",
       "      <td>3.9</td>\n",
       "      <td>0.105176</td>\n",
       "      <td>0.003521</td>\n",
       "      <td>0.074363</td>\n",
       "      <td>0.027292</td>\n",
       "      <td>44357000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Angola</td>\n",
       "      <td>5.8087</td>\n",
       "      <td>0.0560</td>\n",
       "      <td>4.9278</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>9.1085</td>\n",
       "      <td>0.0587</td>\n",
       "      <td>1.7707</td>\n",
       "      <td>6.0005</td>\n",
       "      <td>2.0571</td>\n",
       "      <td>...</td>\n",
       "      <td>0.1231</td>\n",
       "      <td>34.7010</td>\n",
       "      <td>6.8</td>\n",
       "      <td>25</td>\n",
       "      <td>0.009166</td>\n",
       "      <td>0.000369</td>\n",
       "      <td>0.003736</td>\n",
       "      <td>0.005061</td>\n",
       "      <td>32522000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Antigua and Barbuda</td>\n",
       "      <td>3.5764</td>\n",
       "      <td>0.0087</td>\n",
       "      <td>16.6613</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>5.9960</td>\n",
       "      <td>0.2274</td>\n",
       "      <td>4.1489</td>\n",
       "      <td>10.7451</td>\n",
       "      <td>5.6888</td>\n",
       "      <td>...</td>\n",
       "      <td>0.2469</td>\n",
       "      <td>22.2995</td>\n",
       "      <td>19.1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.096939</td>\n",
       "      <td>0.003061</td>\n",
       "      <td>0.092857</td>\n",
       "      <td>0.001020</td>\n",
       "      <td>98000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>165</th>\n",
       "      <td>Venezuela (Bolivarian Republic of)</td>\n",
       "      <td>2.5952</td>\n",
       "      <td>0.0403</td>\n",
       "      <td>14.7565</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>12.9253</td>\n",
       "      <td>0.3389</td>\n",
       "      <td>0.9456</td>\n",
       "      <td>7.6460</td>\n",
       "      <td>3.8328</td>\n",
       "      <td>...</td>\n",
       "      <td>0.1851</td>\n",
       "      <td>33.6855</td>\n",
       "      <td>25.2</td>\n",
       "      <td>21.2</td>\n",
       "      <td>0.189736</td>\n",
       "      <td>0.001522</td>\n",
       "      <td>0.152742</td>\n",
       "      <td>0.035472</td>\n",
       "      <td>28645000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>166</th>\n",
       "      <td>Vietnam</td>\n",
       "      <td>1.4591</td>\n",
       "      <td>0.1640</td>\n",
       "      <td>8.5765</td>\n",
       "      <td>0.0042</td>\n",
       "      <td>16.8740</td>\n",
       "      <td>0.3077</td>\n",
       "      <td>2.6392</td>\n",
       "      <td>5.9029</td>\n",
       "      <td>4.4382</td>\n",
       "      <td>...</td>\n",
       "      <td>0.6373</td>\n",
       "      <td>16.7548</td>\n",
       "      <td>2.1</td>\n",
       "      <td>9.3</td>\n",
       "      <td>0.001090</td>\n",
       "      <td>0.000036</td>\n",
       "      <td>0.000887</td>\n",
       "      <td>0.000167</td>\n",
       "      <td>96209000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167</th>\n",
       "      <td>Yemen</td>\n",
       "      <td>0.0364</td>\n",
       "      <td>0.0446</td>\n",
       "      <td>5.7874</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>27.2077</td>\n",
       "      <td>0.2579</td>\n",
       "      <td>0.5240</td>\n",
       "      <td>5.1344</td>\n",
       "      <td>2.7871</td>\n",
       "      <td>...</td>\n",
       "      <td>0.1667</td>\n",
       "      <td>37.4535</td>\n",
       "      <td>14.1</td>\n",
       "      <td>38.9</td>\n",
       "      <td>0.006669</td>\n",
       "      <td>0.001921</td>\n",
       "      <td>0.004027</td>\n",
       "      <td>0.000721</td>\n",
       "      <td>29826000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>168</th>\n",
       "      <td>Zambia</td>\n",
       "      <td>5.7360</td>\n",
       "      <td>0.0829</td>\n",
       "      <td>6.0197</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>21.1938</td>\n",
       "      <td>0.3399</td>\n",
       "      <td>1.6924</td>\n",
       "      <td>1.0183</td>\n",
       "      <td>1.8427</td>\n",
       "      <td>...</td>\n",
       "      <td>0.1567</td>\n",
       "      <td>40.3939</td>\n",
       "      <td>6.5</td>\n",
       "      <td>46.7</td>\n",
       "      <td>0.069822</td>\n",
       "      <td>0.001605</td>\n",
       "      <td>0.063903</td>\n",
       "      <td>0.004314</td>\n",
       "      <td>18384000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>169</th>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>4.0552</td>\n",
       "      <td>0.0755</td>\n",
       "      <td>8.1489</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>22.6240</td>\n",
       "      <td>0.2678</td>\n",
       "      <td>0.5518</td>\n",
       "      <td>2.2000</td>\n",
       "      <td>2.6142</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0789</td>\n",
       "      <td>39.6248</td>\n",
       "      <td>12.3</td>\n",
       "      <td>51.3</td>\n",
       "      <td>0.049102</td>\n",
       "      <td>0.001413</td>\n",
       "      <td>0.036702</td>\n",
       "      <td>0.010987</td>\n",
       "      <td>14863000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>170 rows Ã— 79 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                Country  Alcoholic Beverages_food  \\\n",
       "0                           Afghanistan                    0.0014   \n",
       "1                               Albania                    1.6719   \n",
       "2                               Algeria                    0.2711   \n",
       "3                                Angola                    5.8087   \n",
       "4                   Antigua and Barbuda                    3.5764   \n",
       "..                                  ...                       ...   \n",
       "165  Venezuela (Bolivarian Republic of)                    2.5952   \n",
       "166                             Vietnam                    1.4591   \n",
       "167                               Yemen                    0.0364   \n",
       "168                              Zambia                    5.7360   \n",
       "169                            Zimbabwe                    4.0552   \n",
       "\n",
       "     Animal fats_food  Animal Products_food  Aquatic Products, Other_food  \\\n",
       "0              0.1973                9.4341                        0.0000   \n",
       "1              0.1357               18.7684                        0.0000   \n",
       "2              0.0282                9.6334                        0.0000   \n",
       "3              0.0560                4.9278                        0.0000   \n",
       "4              0.0087               16.6613                        0.0000   \n",
       "..                ...                   ...                           ...   \n",
       "165            0.0403               14.7565                        0.0000   \n",
       "166            0.1640                8.5765                        0.0042   \n",
       "167            0.0446                5.7874                        0.0000   \n",
       "168            0.0829                6.0197                        0.0000   \n",
       "169            0.0755                8.1489                        0.0000   \n",
       "\n",
       "     Cereals - Excluding Beer_food  Eggs_food  Fish, Seafood_food  \\\n",
       "0                          24.8097     0.2099              0.0350   \n",
       "1                           5.7817     0.5815              0.2126   \n",
       "2                          13.6816     0.5277              0.2416   \n",
       "3                           9.1085     0.0587              1.7707   \n",
       "4                           5.9960     0.2274              4.1489   \n",
       "..                             ...        ...                 ...   \n",
       "165                        12.9253     0.3389              0.9456   \n",
       "166                        16.8740     0.3077              2.6392   \n",
       "167                        27.2077     0.2579              0.5240   \n",
       "168                        21.1938     0.3399              1.6924   \n",
       "169                        22.6240     0.2678              0.5518   \n",
       "\n",
       "     Fruits - Excluding Wine_food  Meat_food  ...  Vegetables_fat  \\\n",
       "0                          5.3495     1.2020  ...          0.3593   \n",
       "1                          6.7861     1.8845  ...          0.6503   \n",
       "2                          6.3801     1.1305  ...          0.5145   \n",
       "3                          6.0005     2.0571  ...          0.1231   \n",
       "4                         10.7451     5.6888  ...          0.2469   \n",
       "..                            ...        ...  ...             ...   \n",
       "165                        7.6460     3.8328  ...          0.1851   \n",
       "166                        5.9029     4.4382  ...          0.6373   \n",
       "167                        5.1344     2.7871  ...          0.1667   \n",
       "168                        1.0183     1.8427  ...          0.1567   \n",
       "169                        2.2000     2.6142  ...          0.0789   \n",
       "\n",
       "     Vegetal Products_fat  Obesity  Undernourished  Confirmed    Deaths  \\\n",
       "0                 28.3684      4.5            29.8   0.098885  0.003635   \n",
       "1                 17.9998     22.3             6.2   0.366667  0.011240   \n",
       "2                 35.5857     26.6             3.9   0.105176  0.003521   \n",
       "3                 34.7010      6.8              25   0.009166  0.000369   \n",
       "4                 22.2995     19.1             NaN   0.096939  0.003061   \n",
       "..                    ...      ...             ...        ...       ...   \n",
       "165               33.6855     25.2            21.2   0.189736  0.001522   \n",
       "166               16.7548      2.1             9.3   0.001090  0.000036   \n",
       "167               37.4535     14.1            38.9   0.006669  0.001921   \n",
       "168               40.3939      6.5            46.7   0.069822  0.001605   \n",
       "169               39.6248     12.3            51.3   0.049102  0.001413   \n",
       "\n",
       "     Recovered    Active  Population  Unit (all except Population)  \n",
       "0     0.078496  0.016754  38928000.0                             %  \n",
       "1     0.217970  0.137456   2838000.0                             %  \n",
       "2     0.074363  0.027292  44357000.0                             %  \n",
       "3     0.003736  0.005061  32522000.0                             %  \n",
       "4     0.092857  0.001020     98000.0                             %  \n",
       "..         ...       ...         ...                           ...  \n",
       "165   0.152742  0.035472  28645000.0                             %  \n",
       "166   0.000887  0.000167  96209000.0                             %  \n",
       "167   0.004027  0.000721  29826000.0                             %  \n",
       "168   0.063903  0.004314  18384000.0                             %  \n",
       "169   0.036702  0.010987  14863000.0                             %  \n",
       "\n",
       "[170 rows x 79 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Selanjutnya gabungkan dataset pada hint di atas dengan menambahkan suffix berbeda untuk setiap supply dataset menggunakan pd.merge\n",
    "# Code here\n",
    "df1 = pd.merge(df_food_new, df_protein_new, on = 'Country', suffixes = ('_food','_protein'))\n",
    "df_fat_very_new = df_fat_new.add_suffix('_fat')\n",
    "df2 = df1.join(df_fat_very_new)\n",
    "df3 = pd.merge(df2, df_non_supply_new, on = 'Country')\n",
    "\n",
    "display(df3)\n",
    "\n",
    "#pembuktian kolom biar sama kaya ditulisan atas \n",
    "#df3.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "5xLsdo-1vmk3"
   },
   "source": [
    "Expected output (kolom tidak semua ditampilkan):\n",
    "![Expected Output:](https://drive.google.com/uc?id=1_thZs6C82RhDFqWo5yGuZV_OWhgvqsnu)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "8eRlFcl7IY-L"
   },
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "1O9_Cu_gIaxd"
   },
   "source": [
    "# Soal 3: Sorting dan Filtering"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "iIPsCyFSIh27"
   },
   "source": [
    "Dari DataFrame hasil penggabungan pada Soal 2 (atau gunakan salah satu supply DataFrame karena kolom nilai non-supply memiliki nilai yang sama), kemudian urutkan data (sort) berdasarkan kolom kematian ('Deaths') dari yang terbesar. Setelah itu lakukan perintah berikut:\n",
    "\n",
    "- Print data hasil sorting\n",
    "- Urutan ke berapakah Indonesia berdasarkan tingkat kematian akibat COVID-19 setelah diurutkan dari yang terbesar? Gunakan code mendapatkan nilainya! \n",
    "- Berapa persen dari populasi jumlah kematian akibat COVID-19 di Indonesia? Hitung jumlah orang yang meninggal! Gunakan code mendapatkan nilainya! #hint: jumlah orang yang meninggal = populasi * kematian --> jangan lupa ada yang masih dalam persen\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "n1yZCZ4bOo6m"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Alcoholic Beverages_food</th>\n",
       "      <th>Animal fats_food</th>\n",
       "      <th>Animal Products_food</th>\n",
       "      <th>Aquatic Products, Other_food</th>\n",
       "      <th>Cereals - Excluding Beer_food</th>\n",
       "      <th>Eggs_food</th>\n",
       "      <th>Fish, Seafood_food</th>\n",
       "      <th>Fruits - Excluding Wine_food</th>\n",
       "      <th>Meat_food</th>\n",
       "      <th>...</th>\n",
       "      <th>Vegetables_fat</th>\n",
       "      <th>Vegetal Products_fat</th>\n",
       "      <th>Obesity</th>\n",
       "      <th>Undernourished</th>\n",
       "      <th>Confirmed</th>\n",
       "      <th>Deaths</th>\n",
       "      <th>Recovered</th>\n",
       "      <th>Active</th>\n",
       "      <th>Population</th>\n",
       "      <th>Unit (all except Population)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Peru</td>\n",
       "      <td>3.8623</td>\n",
       "      <td>0.0316</td>\n",
       "      <td>8.6638</td>\n",
       "      <td>0.0014</td>\n",
       "      <td>11.8140</td>\n",
       "      <td>0.6431</td>\n",
       "      <td>1.7993</td>\n",
       "      <td>8.5783</td>\n",
       "      <td>1.7540</td>\n",
       "      <td>...</td>\n",
       "      <td>0.4523</td>\n",
       "      <td>31.9598</td>\n",
       "      <td>19.1</td>\n",
       "      <td>9.7</td>\n",
       "      <td>2.102050</td>\n",
       "      <td>0.090903</td>\n",
       "      <td>1.591064</td>\n",
       "      <td>0.420083</td>\n",
       "      <td>32824000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Belgium</td>\n",
       "      <td>5.3730</td>\n",
       "      <td>0.8559</td>\n",
       "      <td>17.7279</td>\n",
       "      <td>0.0010</td>\n",
       "      <td>6.6704</td>\n",
       "      <td>0.6487</td>\n",
       "      <td>1.1325</td>\n",
       "      <td>4.1623</td>\n",
       "      <td>3.2370</td>\n",
       "      <td>...</td>\n",
       "      <td>0.2982</td>\n",
       "      <td>23.2622</td>\n",
       "      <td>24.5</td>\n",
       "      <td>&lt;2.5</td>\n",
       "      <td>0.770899</td>\n",
       "      <td>0.086053</td>\n",
       "      <td>0.161320</td>\n",
       "      <td>0.523526</td>\n",
       "      <td>11515000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>5.2632</td>\n",
       "      <td>0.2754</td>\n",
       "      <td>18.8798</td>\n",
       "      <td>0.0006</td>\n",
       "      <td>6.5412</td>\n",
       "      <td>0.6210</td>\n",
       "      <td>1.0911</td>\n",
       "      <td>4.9551</td>\n",
       "      <td>4.4181</td>\n",
       "      <td>...</td>\n",
       "      <td>0.2127</td>\n",
       "      <td>24.1332</td>\n",
       "      <td>29.5</td>\n",
       "      <td>&lt;2.5</td>\n",
       "      <td>0.524793</td>\n",
       "      <td>0.062006</td>\n",
       "      <td>0.002716</td>\n",
       "      <td>0.460071</td>\n",
       "      <td>67160000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Spain</td>\n",
       "      <td>5.3152</td>\n",
       "      <td>0.2357</td>\n",
       "      <td>18.3382</td>\n",
       "      <td>0.0011</td>\n",
       "      <td>6.0548</td>\n",
       "      <td>0.7321</td>\n",
       "      <td>2.2646</td>\n",
       "      <td>4.8332</td>\n",
       "      <td>5.3456</td>\n",
       "      <td>...</td>\n",
       "      <td>0.2611</td>\n",
       "      <td>30.4731</td>\n",
       "      <td>27.1</td>\n",
       "      <td>&lt;2.5</td>\n",
       "      <td>1.103283</td>\n",
       "      <td>0.061963</td>\n",
       "      <td>0.315684</td>\n",
       "      <td>0.725637</td>\n",
       "      <td>47635000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Bolivia</td>\n",
       "      <td>2.8956</td>\n",
       "      <td>0.0889</td>\n",
       "      <td>11.7799</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>12.3079</td>\n",
       "      <td>0.6626</td>\n",
       "      <td>0.2307</td>\n",
       "      <td>7.5088</td>\n",
       "      <td>6.4098</td>\n",
       "      <td>...</td>\n",
       "      <td>0.1919</td>\n",
       "      <td>19.5779</td>\n",
       "      <td>18.7</td>\n",
       "      <td>17.1</td>\n",
       "      <td>1.045337</td>\n",
       "      <td>0.060638</td>\n",
       "      <td>0.628815</td>\n",
       "      <td>0.355884</td>\n",
       "      <td>11633000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>165</th>\n",
       "      <td>New Caledonia</td>\n",
       "      <td>5.0363</td>\n",
       "      <td>0.0821</td>\n",
       "      <td>11.7818</td>\n",
       "      <td>0.0804</td>\n",
       "      <td>8.5840</td>\n",
       "      <td>0.7494</td>\n",
       "      <td>2.0361</td>\n",
       "      <td>5.5855</td>\n",
       "      <td>5.8687</td>\n",
       "      <td>...</td>\n",
       "      <td>0.1887</td>\n",
       "      <td>27.7282</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7.1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>295000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>166</th>\n",
       "      <td>Samoa</td>\n",
       "      <td>1.4236</td>\n",
       "      <td>0.2262</td>\n",
       "      <td>11.1630</td>\n",
       "      <td>0.1236</td>\n",
       "      <td>3.6768</td>\n",
       "      <td>0.1314</td>\n",
       "      <td>2.7788</td>\n",
       "      <td>10.7845</td>\n",
       "      <td>5.7993</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0431</td>\n",
       "      <td>28.3194</td>\n",
       "      <td>45.5</td>\n",
       "      <td>2.7</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>200000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167</th>\n",
       "      <td>Solomon Islands</td>\n",
       "      <td>0.8298</td>\n",
       "      <td>0.1038</td>\n",
       "      <td>3.8504</td>\n",
       "      <td>0.0121</td>\n",
       "      <td>9.0233</td>\n",
       "      <td>0.0826</td>\n",
       "      <td>2.2840</td>\n",
       "      <td>3.2798</td>\n",
       "      <td>0.8897</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0785</td>\n",
       "      <td>36.3351</td>\n",
       "      <td>20.5</td>\n",
       "      <td>8.9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>715000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>168</th>\n",
       "      <td>Turkmenistan</td>\n",
       "      <td>0.5038</td>\n",
       "      <td>0.3373</td>\n",
       "      <td>16.0611</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>14.8029</td>\n",
       "      <td>0.5139</td>\n",
       "      <td>0.2137</td>\n",
       "      <td>4.1441</td>\n",
       "      <td>4.3767</td>\n",
       "      <td>...</td>\n",
       "      <td>0.4459</td>\n",
       "      <td>17.3085</td>\n",
       "      <td>17.5</td>\n",
       "      <td>5.4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6031000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>169</th>\n",
       "      <td>Vanuatu</td>\n",
       "      <td>0.2424</td>\n",
       "      <td>0.0793</td>\n",
       "      <td>6.6244</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>6.4102</td>\n",
       "      <td>0.1875</td>\n",
       "      <td>2.1649</td>\n",
       "      <td>5.8103</td>\n",
       "      <td>2.7466</td>\n",
       "      <td>...</td>\n",
       "      <td>0.1424</td>\n",
       "      <td>35.0847</td>\n",
       "      <td>23.5</td>\n",
       "      <td>7.2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>321000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>170 rows Ã— 79 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             Country  Alcoholic Beverages_food  Animal fats_food  \\\n",
       "0               Peru                    3.8623            0.0316   \n",
       "1            Belgium                    5.3730            0.8559   \n",
       "2     United Kingdom                    5.2632            0.2754   \n",
       "3              Spain                    5.3152            0.2357   \n",
       "4            Bolivia                    2.8956            0.0889   \n",
       "..               ...                       ...               ...   \n",
       "165    New Caledonia                    5.0363            0.0821   \n",
       "166            Samoa                    1.4236            0.2262   \n",
       "167  Solomon Islands                    0.8298            0.1038   \n",
       "168     Turkmenistan                    0.5038            0.3373   \n",
       "169          Vanuatu                    0.2424            0.0793   \n",
       "\n",
       "     Animal Products_food  Aquatic Products, Other_food  \\\n",
       "0                  8.6638                        0.0014   \n",
       "1                 17.7279                        0.0010   \n",
       "2                 18.8798                        0.0006   \n",
       "3                 18.3382                        0.0011   \n",
       "4                 11.7799                        0.0000   \n",
       "..                    ...                           ...   \n",
       "165               11.7818                        0.0804   \n",
       "166               11.1630                        0.1236   \n",
       "167                3.8504                        0.0121   \n",
       "168               16.0611                        0.0000   \n",
       "169                6.6244                        0.0000   \n",
       "\n",
       "     Cereals - Excluding Beer_food  Eggs_food  Fish, Seafood_food  \\\n",
       "0                          11.8140     0.6431              1.7993   \n",
       "1                           6.6704     0.6487              1.1325   \n",
       "2                           6.5412     0.6210              1.0911   \n",
       "3                           6.0548     0.7321              2.2646   \n",
       "4                          12.3079     0.6626              0.2307   \n",
       "..                             ...        ...                 ...   \n",
       "165                         8.5840     0.7494              2.0361   \n",
       "166                         3.6768     0.1314              2.7788   \n",
       "167                         9.0233     0.0826              2.2840   \n",
       "168                        14.8029     0.5139              0.2137   \n",
       "169                         6.4102     0.1875              2.1649   \n",
       "\n",
       "     Fruits - Excluding Wine_food  Meat_food  ...  Vegetables_fat  \\\n",
       "0                          8.5783     1.7540  ...          0.4523   \n",
       "1                          4.1623     3.2370  ...          0.2982   \n",
       "2                          4.9551     4.4181  ...          0.2127   \n",
       "3                          4.8332     5.3456  ...          0.2611   \n",
       "4                          7.5088     6.4098  ...          0.1919   \n",
       "..                            ...        ...  ...             ...   \n",
       "165                        5.5855     5.8687  ...          0.1887   \n",
       "166                       10.7845     5.7993  ...          0.0431   \n",
       "167                        3.2798     0.8897  ...          0.0785   \n",
       "168                        4.1441     4.3767  ...          0.4459   \n",
       "169                        5.8103     2.7466  ...          0.1424   \n",
       "\n",
       "     Vegetal Products_fat  Obesity  Undernourished  Confirmed    Deaths  \\\n",
       "0                 31.9598     19.1             9.7   2.102050  0.090903   \n",
       "1                 23.2622     24.5            <2.5   0.770899  0.086053   \n",
       "2                 24.1332     29.5            <2.5   0.524793  0.062006   \n",
       "3                 30.4731     27.1            <2.5   1.103283  0.061963   \n",
       "4                 19.5779     18.7            17.1   1.045337  0.060638   \n",
       "..                    ...      ...             ...        ...       ...   \n",
       "165               27.7282      NaN             7.1        NaN       NaN   \n",
       "166               28.3194     45.5             2.7        NaN       NaN   \n",
       "167               36.3351     20.5             8.9        NaN       NaN   \n",
       "168               17.3085     17.5             5.4        NaN       NaN   \n",
       "169               35.0847     23.5             7.2        NaN       NaN   \n",
       "\n",
       "     Recovered    Active  Population  Unit (all except Population)  \n",
       "0     1.591064  0.420083  32824000.0                             %  \n",
       "1     0.161320  0.523526  11515000.0                             %  \n",
       "2     0.002716  0.460071  67160000.0                             %  \n",
       "3     0.315684  0.725637  47635000.0                             %  \n",
       "4     0.628815  0.355884  11633000.0                             %  \n",
       "..         ...       ...         ...                           ...  \n",
       "165        NaN       NaN    295000.0                             %  \n",
       "166        NaN       NaN    200000.0                             %  \n",
       "167        NaN       NaN    715000.0                             %  \n",
       "168        NaN       NaN   6031000.0                             %  \n",
       "169        NaN       NaN    321000.0                             %  \n",
       "\n",
       "[170 rows x 79 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Urutkan (sorting) dan print hasil sorting\n",
    "# Code here\n",
    "df_sort = df3.sort_values('Deaths', ascending = False, ignore_index = True)\n",
    "display(df_sort)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 178,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "FnohMVQwP8Og"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Alcoholic Beverages_food</th>\n",
       "      <th>Animal fats_food</th>\n",
       "      <th>Animal Products_food</th>\n",
       "      <th>Aquatic Products, Other_food</th>\n",
       "      <th>Cereals - Excluding Beer_food</th>\n",
       "      <th>Eggs_food</th>\n",
       "      <th>Fish, Seafood_food</th>\n",
       "      <th>Fruits - Excluding Wine_food</th>\n",
       "      <th>Meat_food</th>\n",
       "      <th>...</th>\n",
       "      <th>Vegetables_fat</th>\n",
       "      <th>Vegetal Products_fat</th>\n",
       "      <th>Obesity</th>\n",
       "      <th>Undernourished</th>\n",
       "      <th>Confirmed</th>\n",
       "      <th>Deaths</th>\n",
       "      <th>Recovered</th>\n",
       "      <th>Active</th>\n",
       "      <th>Population</th>\n",
       "      <th>Unit (all except Population)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>Indonesia</td>\n",
       "      <td>0.0794</td>\n",
       "      <td>0.0309</td>\n",
       "      <td>6.2575</td>\n",
       "      <td>0.0009</td>\n",
       "      <td>24.3918</td>\n",
       "      <td>0.4911</td>\n",
       "      <td>3.9386</td>\n",
       "      <td>5.5134</td>\n",
       "      <td>1.0316</td>\n",
       "      <td>...</td>\n",
       "      <td>0.2711</td>\n",
       "      <td>40.8368</td>\n",
       "      <td>6.9</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0.072492</td>\n",
       "      <td>0.002992</td>\n",
       "      <td>0.05176</td>\n",
       "      <td>0.01774</td>\n",
       "      <td>271739000.0</td>\n",
       "      <td>%</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1 rows Ã— 79 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Country  Alcoholic Beverages_food  Animal fats_food  \\\n",
       "84  Indonesia                    0.0794            0.0309   \n",
       "\n",
       "    Animal Products_food  Aquatic Products, Other_food  \\\n",
       "84                6.2575                        0.0009   \n",
       "\n",
       "    Cereals - Excluding Beer_food  Eggs_food  Fish, Seafood_food  \\\n",
       "84                        24.3918     0.4911              3.9386   \n",
       "\n",
       "    Fruits - Excluding Wine_food  Meat_food  ...  Vegetables_fat  \\\n",
       "84                        5.5134     1.0316  ...          0.2711   \n",
       "\n",
       "    Vegetal Products_fat  Obesity  Undernourished  Confirmed    Deaths  \\\n",
       "84               40.8368      6.9             8.3   0.072492  0.002992   \n",
       "\n",
       "    Recovered   Active   Population  Unit (all except Population)  \n",
       "84    0.05176  0.01774  271739000.0                             %  \n",
       "\n",
       "[1 rows x 79 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Indonesia berada di urutan 84\n"
     ]
    }
   ],
   "source": [
    "# Urutan ke berapakah Indonesia\n",
    "# Code here\n",
    "df_sort_indonesia = df_sort.loc[df_sort['Country'] == 'Indonesia']\n",
    "\n",
    "display(df_sort_indonesia)\n",
    "\n",
    "ranking_indonesia = df_sort_indonesia.index.item()\n",
    "print('Indonesia berada di urutan {}'.format(ranking_indonesia))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 201,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "OAzky41S6eAm"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Jumlah yang meninggal di Indonesia ada 0.0029918414 % dari jumlah populasi.\n",
      "Jumlah yang meninggal di Indonesia ada 8130 orang.\n"
     ]
    }
   ],
   "source": [
    "# Berapa persen jumlah kematian di Indonesia? Berapa Jumlahnya?\n",
    "# Code here\n",
    "meninggal_persen = df_sort_indonesia['Deaths'].item()\n",
    "meninggal =  df_sort_indonesia['Population'].item() * meninggal_persen/100\n",
    "\n",
    "print('Jumlah yang meninggal di Indonesia ada {} % dari jumlah populasi.'.format(round(meninggal_persen, 10))) # 10 digit\n",
    "print('Jumlah yang meninggal di Indonesia ada {} orang.'.format(round(meninggal)))\n",
    "\n",
    "#display(df_sort_indonesia['Deaths'])\n",
    "#print(df_sort_indonesia['Deaths'] * df_sort_indonesia['Population']/ 100)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "Ur4P17eNVIDU"
   },
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "zOvEqSmuUsXy"
   },
   "source": [
    "# Soal 4: Binning, Grouping, dan Aggregating data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "mLxskYLCTYFT"
   },
   "source": [
    "Lakukan binning pada kolom terkonfirmasi (Confirmed) COVID-19 dari DataFrame df_fat menjadi 5 bagian (q=5). Teman-teman dapat menggunakan fungsi qcut untuk melakukan bininng ini. Masukan data hasil binning tersebut menjadi kolom baru pada DataFrame df_fat. Beri nama kolom tersebut dengan 'Confirmed Category'. Berikan label 'Sangat Tidak Banyak', 'Tidak Banyak', 'Sedang', 'Cukup Banyak', 'Sangat Banyak'.\n",
    "\n",
    "Baca dokumentasi berikut untuk fungsi qcut : https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.qcut.html\n",
    "\n",
    "Kemudian lakukan perintah-perintah berikut:\n",
    "- Buat DataFrame baru yang berisi data grouping berdasarkan kolom hasil bininng atau kolom 'Confirmed Category'. \n",
    "- Lakukan grouping hanya pada kolom 'Obesity', 'Meat', 'Fruits - Excluding Wine', 'Fish, Seafood', 'Animal Products', 'Vegetal Products' saja.\n",
    "- Kemudian aggregate dengan fungsi mean. (df_baru = df_fat.groupby(...).mean())\n",
    "- Save DataFrame hasil binning, grouping, dan aggregating ke dalam file csv."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0             Tidak Banyak\n",
       "1             Cukup Banyak\n",
       "2                   Sedang\n",
       "3      Sangat Tidak Banyak\n",
       "4             Tidak Banyak\n",
       "              ...         \n",
       "165                 Sedang\n",
       "166    Sangat Tidak Banyak\n",
       "167    Sangat Tidak Banyak\n",
       "168           Tidak Banyak\n",
       "169           Tidak Banyak\n",
       "Name: Confirmed Category, Length: 170, dtype: category\n",
       "Categories (5, object): [Sangat Tidak Banyak < Tidak Banyak < Sedang < Cukup Banyak < Sangat Banyak]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Lakukan binning pada kolom terkonfirmasi untuk DataFrame df_fat\n",
    "labels = ['Sangat Tidak Banyak', 'Tidak Banyak', 'Sedang', 'Cukup Banyak', 'Sangat Banyak']\n",
    "\n",
    "# Code here\n",
    "df_fat['Confirmed Category'] = pd.qcut(df_sort['Confirmed'], 5, labels = labels)\n",
    "\n",
    "display(df_fat['Confirmed Category'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [],
   "source": [
    "pd.qcut?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "wH_Twtg9gLHZ"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Obesity</th>\n",
       "      <th>Meat</th>\n",
       "      <th>Fruits - Excluding Wine</th>\n",
       "      <th>Fish, Seafood</th>\n",
       "      <th>Animal Products</th>\n",
       "      <th>Vegetal Products</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Confirmed Category</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Sangat Tidak Banyak</th>\n",
       "      <td>10.856250</td>\n",
       "      <td>9.902970</td>\n",
       "      <td>0.456676</td>\n",
       "      <td>1.024506</td>\n",
       "      <td>16.952912</td>\n",
       "      <td>33.047858</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tidak Banyak</th>\n",
       "      <td>15.481250</td>\n",
       "      <td>8.023331</td>\n",
       "      <td>0.758656</td>\n",
       "      <td>0.777113</td>\n",
       "      <td>17.719428</td>\n",
       "      <td>32.280200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sedang</th>\n",
       "      <td>19.378125</td>\n",
       "      <td>8.567009</td>\n",
       "      <td>0.460409</td>\n",
       "      <td>0.790903</td>\n",
       "      <td>21.461984</td>\n",
       "      <td>28.538681</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cukup Banyak</th>\n",
       "      <td>22.446875</td>\n",
       "      <td>9.819503</td>\n",
       "      <td>0.495053</td>\n",
       "      <td>0.636666</td>\n",
       "      <td>24.095684</td>\n",
       "      <td>25.904362</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sangat Banyak</th>\n",
       "      <td>24.300000</td>\n",
       "      <td>10.505816</td>\n",
       "      <td>0.585538</td>\n",
       "      <td>0.800600</td>\n",
       "      <td>23.609034</td>\n",
       "      <td>26.390828</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       Obesity       Meat  Fruits - Excluding Wine  \\\n",
       "Confirmed Category                                                   \n",
       "Sangat Tidak Banyak  10.856250   9.902970                 0.456676   \n",
       "Tidak Banyak         15.481250   8.023331                 0.758656   \n",
       "Sedang               19.378125   8.567009                 0.460409   \n",
       "Cukup Banyak         22.446875   9.819503                 0.495053   \n",
       "Sangat Banyak        24.300000  10.505816                 0.585538   \n",
       "\n",
       "                     Fish, Seafood  Animal Products  Vegetal Products  \n",
       "Confirmed Category                                                     \n",
       "Sangat Tidak Banyak       1.024506        16.952912         33.047858  \n",
       "Tidak Banyak              0.777113        17.719428         32.280200  \n",
       "Sedang                    0.790903        21.461984         28.538681  \n",
       "Cukup Banyak              0.636666        24.095684         25.904362  \n",
       "Sangat Banyak             0.800600        23.609034         26.390828  "
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Lakukan grouping pada kolom hasil binning ('Confirmed Category'), kemudian aggregate menggunakan fungsi mean\n",
    "cols = ['Obesity', 'Meat', 'Fruits - Excluding Wine', 'Fish, Seafood', 'Animal Products', 'Vegetal Products']\n",
    "\n",
    "# Code here\n",
    "groupby_confirmed = df_fat.groupby('Confirmed Category')[cols].mean()\n",
    "groupby_confirmed"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "uoPr2JSfwi5x"
   },
   "source": [
    "Expected output:\n",
    "![Expected Output:](https://drive.google.com/uc?id=1jw1uGaSHaKlY9ILghmTTlO9NqhQpq8Ad)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "ylCxhoZIhQ1J"
   },
   "outputs": [],
   "source": [
    "# Save DataFrame hasil binning, grouping, dan aggregating\n",
    "\n",
    "groupby_confirmed.to_csv('groupby_confirmed.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "QXt4J6-ki7yV"
   },
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "KYkVllUIi9gk"
   },
   "source": [
    "# Soal 5: Bar plot"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "oW_a_78Fjkbx"
   },
   "source": [
    "Gunakan data grouping pada soal sebelumnya untuk melakukan visualisasi. Jika kalian tidak dapat menyelesaikan soal tersebut, maka silahkan [download](https://drive.google.com/uc?export=download&id=1Y7w1ADb-njhoNa2Yl_dhpvWI-Q8ChdHs) data berikut yang merupakan hasil dari data grouping soal 4.\n",
    "\n",
    "Normalisasi data hasil grouping tersebut dengan rumus min-max normalisasi seperti rumus berikut ini. Kemudian buatlah grouping Visualization dengan berplot, visualisasikan data column 'Obesity', 'Fruits - Excluding Wine', 'Fish, Seafood', 'Animal Products' dan 'Vegetal Products'. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "884pC4nnWZVg"
   },
   "source": [
    "\\begin{equation*}\n",
    " X_{norm} = \\dfrac{X - X_{min}}{X_{max} - X_{min}}\n",
    "\\end{equation*}\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "-5tpx0PNlUQx"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Obesity</th>\n",
       "      <th>Meat</th>\n",
       "      <th>Fruits - Excluding Wine</th>\n",
       "      <th>Fish, Seafood</th>\n",
       "      <th>Animal Products</th>\n",
       "      <th>Vegetal Products</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Confirmed Category</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Sangat Tidak Banyak</th>\n",
       "      <td>10.856250</td>\n",
       "      <td>9.902970</td>\n",
       "      <td>0.456676</td>\n",
       "      <td>1.024506</td>\n",
       "      <td>16.952912</td>\n",
       "      <td>33.047858</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tidak Banyak</th>\n",
       "      <td>15.481250</td>\n",
       "      <td>8.023331</td>\n",
       "      <td>0.758656</td>\n",
       "      <td>0.777113</td>\n",
       "      <td>17.719428</td>\n",
       "      <td>32.280200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sedang</th>\n",
       "      <td>19.378125</td>\n",
       "      <td>8.567009</td>\n",
       "      <td>0.460409</td>\n",
       "      <td>0.790903</td>\n",
       "      <td>21.461984</td>\n",
       "      <td>28.538681</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cukup Banyak</th>\n",
       "      <td>22.446875</td>\n",
       "      <td>9.819503</td>\n",
       "      <td>0.495053</td>\n",
       "      <td>0.636666</td>\n",
       "      <td>24.095684</td>\n",
       "      <td>25.904363</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sangat Banyak</th>\n",
       "      <td>24.300000</td>\n",
       "      <td>10.505816</td>\n",
       "      <td>0.585538</td>\n",
       "      <td>0.800600</td>\n",
       "      <td>23.609034</td>\n",
       "      <td>26.390828</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       Obesity       Meat  Fruits - Excluding Wine  \\\n",
       "Confirmed Category                                                   \n",
       "Sangat Tidak Banyak  10.856250   9.902970                 0.456676   \n",
       "Tidak Banyak         15.481250   8.023331                 0.758656   \n",
       "Sedang               19.378125   8.567009                 0.460409   \n",
       "Cukup Banyak         22.446875   9.819503                 0.495053   \n",
       "Sangat Banyak        24.300000  10.505816                 0.585538   \n",
       "\n",
       "                     Fish, Seafood  Animal Products  Vegetal Products  \n",
       "Confirmed Category                                                     \n",
       "Sangat Tidak Banyak       1.024506        16.952912         33.047858  \n",
       "Tidak Banyak              0.777113        17.719428         32.280200  \n",
       "Sedang                    0.790903        21.461984         28.538681  \n",
       "Cukup Banyak              0.636666        24.095684         25.904363  \n",
       "Sangat Banyak             0.800600        23.609034         26.390828  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Gunakan DataFrame hasil grouping soal 4 atau read data hasil download jika tidak dapat mengerjakan soal 4\n",
    "df = groupby_confirmed\n",
    "\n",
    "# Atau\n",
    "\n",
    "df = pd.read_csv('groupby_confirmed.csv').set_index('Confirmed Category')\n",
    "\n",
    "# Lihat df dan pastikan sesuai dengan expected output pada soal 4\n",
    "display(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "nokTOpibmhD0"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Obesity</th>\n",
       "      <th>Meat</th>\n",
       "      <th>Fruits - Excluding Wine</th>\n",
       "      <th>Fish, Seafood</th>\n",
       "      <th>Animal Products</th>\n",
       "      <th>Vegetal Products</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Confirmed Category</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Sangat Tidak Banyak</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.757160</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tidak Banyak</th>\n",
       "      <td>0.344026</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.362125</td>\n",
       "      <td>0.107314</td>\n",
       "      <td>0.892538</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sedang</th>\n",
       "      <td>0.633891</td>\n",
       "      <td>0.219006</td>\n",
       "      <td>0.012364</td>\n",
       "      <td>0.397683</td>\n",
       "      <td>0.631278</td>\n",
       "      <td>0.368772</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cukup Banyak</th>\n",
       "      <td>0.862157</td>\n",
       "      <td>0.723538</td>\n",
       "      <td>0.127086</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sangat Banyak</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.426722</td>\n",
       "      <td>0.422685</td>\n",
       "      <td>0.931868</td>\n",
       "      <td>0.068099</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                      Obesity      Meat  Fruits - Excluding Wine  \\\n",
       "Confirmed Category                                                 \n",
       "Sangat Tidak Banyak  0.000000  0.757160                 0.000000   \n",
       "Tidak Banyak         0.344026  0.000000                 1.000000   \n",
       "Sedang               0.633891  0.219006                 0.012364   \n",
       "Cukup Banyak         0.862157  0.723538                 0.127086   \n",
       "Sangat Banyak        1.000000  1.000000                 0.426722   \n",
       "\n",
       "                     Fish, Seafood  Animal Products  Vegetal Products  \n",
       "Confirmed Category                                                     \n",
       "Sangat Tidak Banyak       1.000000         0.000000          1.000000  \n",
       "Tidak Banyak              0.362125         0.107314          0.892538  \n",
       "Sedang                    0.397683         0.631278          0.368772  \n",
       "Cukup Banyak              0.000000         1.000000          0.000000  \n",
       "Sangat Banyak             0.422685         0.931868          0.068099  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Lakukan normalisasi pada DataFrame df\n",
    "# Code here\n",
    "def normalisasi(x):\n",
    "    return(x - x.min())/ (x.max() - x.min())\n",
    "\n",
    "df_norm = df.apply(normalisasi)\n",
    "\n",
    "# Lihat df_norm dan pastikan sesuai dengan expected output\n",
    "display(df_norm)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "37rjPjbanRNY"
   },
   "source": [
    "Expected output:\n",
    "![Expected Output:](https://drive.google.com/uc?id=1BFzcOFHbZMnw0wqbwl8K6IEiVmurqG84)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "lMzOW9t7nU-I"
   },
   "outputs": [],
   "source": [
    "# Buat bar plot dari df_norm sesuai dengan expected output\n",
    "# Code here\n",
    "confirmed = df_norm.T\n",
    "\n",
    "x = np.arange(len(confirmed.index))\n",
    "\n",
    "y1 = list(confirmed['Sangat Tidak Banyak'])\n",
    "y2 = list(confirmed['Tidak Banyak'])\n",
    "y3 = list(confirmed['Sedang'])\n",
    "y4 = list(confirmed['Cukup Banyak'])\n",
    "y5 = list(confirmed['Sangat Banyak'])\n",
    "\n",
    "width = 0.1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABBAAAAISCAYAAAB1fTzBAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy8li6FKAAAgAElEQVR4nOzde1xVZb4/8M8XtiAKoggKCAjIdYOAo1I5qeUc7+Z4zEzSUdOmQfNYZv7sNDPVOGV2Kp0MZ+w2Xk6NOHOyzBRNM8XJytGEETcI3gGvoHIRBfbm+f2x1qYNIhuNq37er5ev195rredZz7rhfr7PZYlSCkRERERERERE9XFo6QIQERERERERUevHAAIRERERERER2cUAAhERERERERHZxQACEREREREREdllaOkCEBERERERUdM6cOBAN4PB8AGAaLAhmepXBSDDbDY/0bdv3wu2KxhAICIiIiIiusMZDIYPvL29I728vC47ODjwVXx0U1VVVXLx4kXjuXPnPgAw1nYdI09ERERERER3vmgvL69iBg/IHgcHB+Xl5VUErbdKzXUtUB4iIiIiIiJqXg4MHlBD6ffKDfECBhCIiIiIiIioyS1cuNA7JCQkKiwszBgREWHcuXNnx+ba96JFi7qVlJTcUP8dOnRor4iICGNAQEC0m5tbXEREhDEiIsK4ffv2jo8++mjPAwcOtK+dZvny5V2nTp0aUN/+nn32Wd8XX3yxu71tunXrFhMREWEMCgqKmjx5coDFYrn1g7sNX3zxhduDDz4YcqvpOAcCERERERHRXSbw+c19GzO/k0tGH6hv/Y4dOzpu27at86FDh0wuLi7q7NmzhvLycmnMMtTn3Xff7f7rX//6kpubW5Xt8u3btx8DtAr1W2+91f3rr78+al03dOjQq01drsTExPOLFi06b7FYEB8fH75lyxa3hx56qKSp93u72AOBiIiIiIiImlR+fn47Dw8Ps4uLiwIAHx8fc2BgYCUAPPfccz7R0dGRoaGhUQkJCT2rqrQ6fnx8fPisWbN69O7dOzIwMDB669atrgBQUlLiMGrUqOCwsDDj6NGjg2NiYiJSU1M7AMDkyZMDoqOjI0NCQqLmzZvnCwCvvPJKtwsXLrQbPHhw2D333BPW0DLHx8eHW/N9++23uwYGBkb3798/fO/eva7Wbf72t7+5x8TERERGRhoHDBgQlpube0Mj/VtvveU5aNCg0NLS0psGTMrLy6W8vNyha9euZmua6OjoyPDwcOPw4cN7WXtPPPzww4HTp0/379OnT4Sfn1/vVatWdQGAcePGBX300UedrfmNHTs26OOPP3Y/cuSIU9++fcONRmOk0WiM3L59+w29Pnbv3t0hMjLSaDKZnOydEwYQiIiIiIiIqEmNGzeu+MyZM06BgYHRU6ZMCdi8eXN1JXzBggUXMjIyMnNycg5fu3bNITk52d26zmw2y6FDhzJff/313EWLFvkCwBtvvOHVuXNnS3Z2tunll18+YzKZqivFS5cuzc/IyMjMyso6/M0337h9//33Lr/73e8udOvWrXL37t3Z33//ffatlv3UqVPtlixZ4rt3796sPXv2ZGdnZ7tY1w0dOrQ0LS0tKzMz0zRhwoRLixYt8rZNu3jxYq/Nmzd33rZt21FXV9cb5qBYuXJl94iICKO3t3dsUFDQ9QEDBlwDgMmTJ1/OyMjIPHLkiCk8PPza8uXLPa1pzp8/327//v1ZGzduzHnppZd6AMCvf/3ri6tXr+4KAIWFhY4HDhxwnThxYpGvr695z5492SaTKXP9+vXH582bV2Poxfbt2zvOnj275+eff37UaDRW2DsXDCAQERERERFRk3J3d6/KyMgwJSUlnfLy8jJPmzat1/Lly7sCQEpKiltMTExEWFiYce/evW4ZGRnVFfRHHnnkMgAMGDDgal5enhMA7N271zUhIeESAPTv3/96WFhYmXX7NWvWeOit7cacnJz26enpN8xhcKtSU1M73nvvvSW+vr7m9u3bq/Hjx1+yrjtx4oTTwIEDQ8PCwozLly/3zsrKqi77+vXru3755ZfuKSkpx6w9L2pLTEw8n5WVZbp48WJ6WVmZw3vvvdcFAA4cOODSt2/f8LCwMOMnn3zS9fDhw9XHMXbs2CuOjo7o27fv9cLCwnYAMHr06NJTp061z8/PN3z44Yceo0ePvtyuXTtUVFTIY489FhgWFmZ85JFHeh07dqw6n6NHj7afPXt24ObNm4+GhobaDR4ADCAQERERERFRMzAYDBgzZkzJsmXLzrzxxhunP/vssy5lZWUyf/78nhs2bDiWnZ1tmjJlSsH169er66nt27dX1rQWi0UAQKm6XyaRlZXllJSU1H337t3Z2dnZpiFDhhTZ5vVTiNQ9+mDOnDkBs2fPvpCdnW1KSko6VV5eXr2/8PDwa3l5ec4nTpxoZy9/Z2dnNWzYsOLU1FQ3AHjyySeDkpKSTmdnZ5sWLlx4xjZf6zkBap6LiRMnFn7wwQceH330Udcnn3yyAABeffXV7t26davMzMw0HTp0yFRZWVmdT7du3SqdnZ2rvvvuuw4NPQ8MIBAREREREVGTSk9Pdz506JCz9fvBgwdd/Pz8KsrKyhwAwNvb21xUVOSwadOmLvbyGjBgQGlycrK1pb69dUjB5cuXHV1cXKo8PDwsubm5hl27dlUPhejYsaOlqKjotuq/gwYNuvrdd9+5nTt3zrG8vFw+/fTT6jKWlJQ4BgQEVAKAdQiBVVxcXNmKFStOjR07NuTkyZP1BhGqqqrw7bffuvbq1ascAMrKyhwCAgIqy8vLJTk52aMh5UxMTCx49913uwNAv379rgNAUVGRo4+PT6WjoyP+/Oc/d7V9y0OnTp0sKSkpOS+99FKPL774wq0h++BbGIiIiIiIiKhJFRcXO86dOzeguLjY0dHRUQUGBpavWbPmlKenp2Xy5MkXjUZjlJ+fX0VsbKzdNx8sWLDg4sSJEwPDwsKM0dHRZeHh4de6dOli6d27d3l0dHRZaGhoVEBAQHnfvn1LrWmmTZtWMHLkyNBu3bpV3uo8CD179qxcuHDhmXvvvTfSy8urMiYmpszaG+K3v/3tmYSEhF7du3ev6Nev39XTp08726YdPnx46WuvvZY3cuTI0J07d2b7+PiYbdevXLmy+9///veuZrNZIiMjyxYsWHABAJ5//vkz8fHxkT169KiIjIwsKy0tdbRXTn9/f3OvXr2uP/TQQ1esy5555pkLDz/8cK/PPvusy/3331/i4uJSVTvNF198cXTkyJGhHTp0ODlkyJB6z7/crPsHERERERER3RnS09NPxsbGFrR0ORqD2WxGRUWFdOjQQR0+fNh52LBhYceOHcuw7dp/NyopKXEwGo3GtLS0zK5du1rsp6hfenq6Z2xsbKDtMvZAICIiIiIiojajpKTEYeDAgeGVlZWilMKyZctO3e3Bg88++8xt1qxZgbNmzTrfGMGDm2EPBCIiIiIiojvcndQDgZpHXT0QOIkiEREREREREdnFAAIRERERERER2cUAAhERERERERHZxQACEREREREREdnFAAIRERERERE1qXPnzjlGREQYIyIijJ6enrHdunWLsX7v06dPRF1pHn744cBVq1Z1qS/f+Pj48NTU1A72tgkMDIyOiIgwBgcHR7355pueP+VYbsWzzz7r++KLL3Zvrv01Nb7GkYiIiIiI6G7zsnvfxs2v6EB9q729vS1ZWVkmQKtUu7q6WhYtWnS+UctQj7Vr1x4fNGhQ2fnz5x1DQ0N7z5kzp/Buf/Xj7WAPBCIiIiIiImoxHTp06AMAVVVVmDp1akCvXr2iHnjggZCCgoLqBu/nnnvOJzo6OjI0NDQqISGhZ1VVVY08LBYLxo8fHzh37lzf+vZVXFzs6OLiUmUwGBQATJ48OSA6OjoyJCQkat68edVpe/To0XvevHm+RqMxMiwszHjw4MH2FosFPXv2jD5z5ozBus+AgIDos2fPGv72t7+5x8TERERGRhoHDBgQlpube0Nj/VtvveU5aNCg0NLSUvlJJ6wFMYBARERERERELe5///d/Ox89etT5yJEjh1evXn3qhx9+cLWuW7BgwYWMjIzMnJycw9euXXNITk52t66rrKyUcePGBYWGhl5fvnz5mbrynjp1anBYWJixd+/e0c8999wZg0Gr3y9dujQ/IyMjMysr6/A333zj9v3337tY03h6eppNJlPmjBkzLi5ZsqS7o6MjJkyYUPjBBx94AMDGjRs7RUZGXvPx8TEPHTq0NC0tLSszM9M0YcKES4sWLfK23f/ixYu9Nm/e3Hnbtm1HXV1d22zPBwYQiIiIiIiIqMXt3r3bbeLEiZcMBgMCAwMr77vvvhLrupSUFLeYmJiIsLAw4969e90yMjKqK/qzZ8/uaTQar73++uvnbpb32rVrj2dnZ5uOHz/+76SkJO/s7GwnAFizZo2H0WiMNBqNxpycnPbp6entrWkee+yxywAQHx9flpub6wwAs2bNKkhOTu4KAH/96189p0+fXgAAJ06ccBo4cGBoWFiYcfny5d5ZWVnV5Vu/fn3XL7/80j0lJeWYi4tLmw0eAAwgEBERERERUSshcmPv/rKyMpk/f37PDRs2HMvOzjZNmTKl4Pr169V12X79+pXu2bOnU1lZmd2hAb6+vubo6Oiy1NTUjllZWU5JSUndd+/enZ2dnW0aMmRIkW2+1jkSDAaDMpvNAgAhISGVnp6e5s8//9zt4MGDHR955JEiAJgzZ07A7NmzL2RnZ5uSkpJOlZeXV+cTHh5+LS8vz/nEiRPtftLJaQUYQCAiIiIiIqIWN3jw4JJ//OMfHmazGadOnWr33XffuQFAWVmZAwB4e3ubi4qKHDZt2lTjzQy/+c1vCoYNG1Y0ZsyYXpWVlfXuo6SkxOHw4cMdwsPDyy9fvuzo4uJS5eHhYcnNzTXs2rXLvd7EuhkzZlx84okngsaOHXvJOhSipKTEMSAgoBIAVq9e3dV2+7i4uLIVK1acGjt2bMjJkyfbdBCBAQQiIiIiIiJqcb/61a+uBAcHl4eHh0fNnDkzID4+vgQAPD09LZMnT75oNBqjRo4cGRIbG3u1dtqXX375fGxsbNn48eODLBbLDXlPnTo1OCIiwhgbGxs5adKkgoEDB5bdd99916Kjo8tCQ0OjfvWrXwX27du3tCHlTEhIKCorK3N88sknC63Lfvvb355JSEjo1bdv3/CuXbuaa6cZPnx46WuvvZY3cuTI0LNnz7bZtyGKUm16CAYRERERERHZkZ6efjI2NragpctxJ0hNTe0wb948/wMHDhxp6bI0pfT0dM/Y2NhA22VtNvJBRERERERE1JxeeOEF79WrV3utWrXqREuXpSWwBwIREREREdEdjj0Q6FbV1QOBcyAQERERERERkV0MIBARERERERGRXQwgEBEREREREZFdDCAQERERERERkV0MIBAREREREVGTW7hwoXdISEhUWFiYMSIiwrhz586ODUl35MgRp9DQ0KimLh/Zx9c4EhERERER3WV6r+ndtzHzOzTt0IH61u/YsaPjtm3bOh86dMjk4uKizp49aygvL5fGLAM1PfZAICIiIiIioiaVn5/fzsPDw+zi4qIAwMfHxxwYGFi5Z8+eDv379w+PioqKvP/++0NPnTrVDgD27NnTITw83BgXFxexdOnSbtZ8jhw54tS3b99wo9EYaTQaI7dv394RAL744gu3+Pj48BEjRgQHBQVFjR07NqiqqgoAsH79evegoKCovn37hk+fPt3/wQcfDGmBU3BHYACBiIiIiIiImtS4ceOKz5w54xQYGBg9ZcqUgM2bN7uWl5fL3LlzAzZu3Hjs8OHDmdOmTSt47rnnegDAzJkzA5cuXXo6LS0tyzYfX19f8549e7JNJlPm+vXrj8+bNy/Aui4zM9NlxYoVuUePHj18+vRp5+3bt7uWlZXJ008/3TMlJSXnwIEDRwoLC9kL/yfgySMiIiIiIqIm5e7uXpWRkWHaunWr21dffeU2bdq0Xs8+++yZnJwclyFDhoQBQFVVFby8vCoLCwsdS0pKHEePHl0KADNmzCjcuXOnOwBUVFTIzJkze5pMJhcHBwecOnXK2bqP3r17X+3Vq1clAERFRZUdO3bMyc3NzeLv718eERFRAQCTJk269MEHH3g1/xm4MzCAQERERERERE3OYDBgzJgxJWPGjCmJiYm5tnLlSq+QkJBrtXsZFBQUOIrUPT3Cq6++2r1bt26Vn3zyyYmqqiq4uLhUz+Xg7OysrJ8dHR1hNptFKVVnPnR7OISBiIiIiIiImlR6errzoUOHqnsLHDx40CU0NPT6pUuXDDt27OgIAOXl5bJ///72np6eFldXV8u2bdtcAWD16tUe1nRFRUWOPj4+lY6Ojvjzn//c1WKx1Lvf2NjY67m5uc5HjhxxAoD169d71JuA6sUeCERERERERNSkiouLHefOnRtQXFzs6OjoqAIDA8vXrFlz6sSJExfnzp0bUFJS4mixWGTWrFnn+/Xrd/3DDz88+cQTTwS6uLhUDRkypNiazzPPPHPh4Ycf7vXZZ591uf/++0tcXFyq6tuvq6urWrp06akRI0aEenh4mPv06XO16Y/2zsUuHURERERERHe49PT0k7GxsQUtXY6WUFRU5ODu7l5VVVWFqVOnBoSGhl5/6aWXLrR0uVq79PR0z9jY2EDbZRzCQERERERERHesP/3pT54RERHG0NDQqOLiYsdnn332rgykNAb2QCAiIiIiIrrD3c09EOj2sAcCEREREREREd0WBhCIiIiIiIiIyC4GEIiIiIiIiIjILgYQiIiIiIiIiMguBhCIiIiIiIioyTk6OvaNiIgwhoeHG41GY+T27ds7Nte+4+Pjw1NTUzs01/7uVIaWLgAR3ZlEZDqAJ5RS9zf3vkSkFECMUup4U++bABFZCSBfKfXHJtzHagB5SqnfNdU+2oKWOg8ichLaM7ajOfdbqwwvAAhWSj3RCHmdRAsfDxFRS8uMiOzbmPlFZmUesLeNs7NzVVZWlgkAPvnkk04vvPCC39ChQ480ZjmoabEHAhFVE5GTInJNREpF5LyIrBIR15Yu161SSrm2tuCBiEwXkX/afO8kIt+IyCci0q4ly/ZTKaUSbxY80I9bicjSWsvH6ctXN0shm4GIvCwilfrzUyoimSLycEuXq62wOW+lIlJl87eoVEQmK6UWN0bw4CeWscZzfJNtdonIEzbfHxCRyyIyqelLaJ/+t+dPInJaP7dH9e+eNttMF5FDIlImIudE5C8i0llfl6D/XyG18jWIyAURGaMfc57Nul0icl1ESkSkWEQOiMjzIuJsp6zvicgR/X6YXmuds4gsE5Ez+vn9c1v/W0p0tykqKnJ0d3c3658d7rvvvjCj0RgZFhZm/OijjzoDwJEjR5yCg4OjJk2a1DMkJCTq5z//eWhpaakcPnzY2Wg0RlrzOnTokHNUVFQkADz33HM+0dHRkaGhoVEJCQk9q6qqauzXYrFg/PjxgXPnzvVtxsO9YzCAQES1PaSUcgXwMwD9AdxyS6eIsHdTPUSkC4AdAE4BeFQpVdnCRWpqxwA8Wuu+mAogu4XK05TW6wEsVwDPAPhIRLrfaiat5RlqznJYz5t+7k5D/1uk//u4ucrRmERkGIDPAMxQSiW3gvI4AfgKQBSAEQA6ARgAoBBAvL7NfACvA1gAwB3AvQB6Atiup/8UQGcAg2tlPwKAArD1Jrufo5RyA+ADYD6ASQC21A5E1JIOYDaAH+pY9zyAfgCiAYRB+z/rru6hRNQWlJeXO0RERBiDgoKinn766Z4vvfTSWQDo0KFD1ebNm4+aTKbM3bt3Z7/wwgt+1or/6dOn28+dO/fC0aNHD7u7u1vWrl3bJSoqqtzNzc2yd+9eFwB49913PR977LFCAFiwYMGFjIyMzJycnMPXrl1zSE5Odrfuv7KyUsaNGxcUGhp6ffny5Wda4BS0eQwgEFGdlFL5AFKg/TiDiLiLyIciclZE8kXkFRFx1NdN11vTl4nIJQAv69mIiLwjIkUikiUiv8CPKx7XW2hLROS4iPzGZt0DIpInIvP1Fq2zIvK4zfquIvK53pK1D0Av27LrLdsh+ufVIrJCRDbr+/peRHrZbDtMb+Eq0luwdltbD0Wkl4jsFJFCESkQkY+trXD6+pMi8pyI/FtPv15E2td3XvVWvp0ADgOYopQy25zftSJyUUROicjvRMTB5vz+U0Te1FvaTojISJs8p+vnsERfN1lf/rKIfGSzXaB+bgz69136ddwrWkvkJv3cfqyf23+JSKD1QurX94J+rP8WEeu9sVpEXqnnsM8BOARguL69B7RKy+e1zs0/RGvtLBKRVBGJusk5dBORr0VkuV6u0SJyUC9zroi8XMcxTxOtxbVARH5rsz5eRL4VkSv6fZYkWiXJul6JSKKI5OjnfoVIvRWeakqpbQBKYHN/itY6m6bvb6+IxNisOykiC0Xk3wCuitai20dEftCv7XoA7W227yIiX+j3zGX9s5/N+pvdFw25r2uUo9b5j9Dzm6R/f15Ejun7MYnIf9Yqw03v3Vthez834Lq6iMgafZ+ZIvL/xKZF/HaOR0QiAawEcJ/+vFyxU94xAP4O4DGl1Kc2y9/W71NrS/xAm3XxIrJfX3de9J47UqtFX192UkT+o750dZgKIADAfyqlTEqpKqXUBaXUH5VSW0SkE4A/APgvpdRWpVSlUuokgInQgghTlFLX9eOaWkfeH1v/pt2MUuqqUmoXgLEA7gMwup5tVyilvgJwvY7VDwFYrpS6pJS6CGA5gBn17ZuIWp51CMOJEycOf/rppzmPP/54UFVVFaqqquSZZ57xCwsLMz744INhFy5ccMrLyzMAQI8ePcoHDBhwDQD69OlTdvLkSWcAmD59esH777/vaTabsXHjxi4zZ84sBICUlBS3mJiYiLCwMOPevXvdMjIyXKz7nz17dk+j0Xjt9ddfP9cSx38nYACBiOokIv4ARgE4qC9aA8AMIARAHwDDANh2J74HwHEA3QC8WmuZJ4CXAGwQrfIIABcAjIHWAvY4gGUi8jOb/LyhtX71ADATwArRWu4BYAW0H5Q+0H4w2vvRmADtR3EXAEet5ROtMv9/AP4bQFcAR6BVbKtPA4DXAPgCiATgjx+DI1YTobW8BQGIATC9nnJ4ANgN4HtoLZK2fere0Y83GFrL3lRo58XqHr18ngD+B8CHeuW5I7QfziP11r0BANLqKUNtkwD8Ctp57gXgWwCr9LJmQrtugHa9B0Fr6esM4FForZYNtRY/VjgmAdgIoLzWNikAQqHdQz8AuKHVWUS6QmtB/UYpNVcppQBc1fPuDK0yMktExtVKej+AcAC/APCiXhkEAAuAedDO6336+tm10o6B1hsnFtr1Hm7vYPVrMxqAEwCTvuxnAP4K4DfQ7rd3AXwuNbtxJ+jH0Bna/9GfAfhfaNfjHwBsh0Q4QLtWPaFVCq8BSNL3Vd990ZD7urocthVC/Ri+hFbBtLaoHwMwENr9+wdovS58bPKq896t7/zdgptd15cABEJ7noYCmFJX4ls5HqVUJoBEAN/qvSI615Wn7iEAHwGYoJTaUmvdvwDEQbumfwPwD/kx8Pg2gLeVUp2gPY9/t38KbindfwDYqpQqvcn6AdCCVBtsF+rbp0A7l4D2/8EEEXEBtAAotGNe28DyQil1GsB+aOf6doj+z/a7n14WImoD/uM//uPq5cuXDWfPnjW8++67HoWFhYZDhw5lZmVlmbp27Vp57do1BwBwcnJS1jSOjo7KbDYLAEybNu3y119/7Z6cnNy5d+/eZd7e3paysjKZP39+zw0bNhzLzs42TZkypeD69evVdd5+/fqV7tmzp1NZWVlj/T9012EAgYhq+0xvWfsntMruYtG6YI8E8IzeenQBwDJoFUGrM0qpd5RSZqXUNX3ZBQB/0lux1kOrRIwGAKXUZqXUMaXZDe1HvO0PyUoAi/S0WwCUAggXrdfDwwBe1MuSAe3HbH02KKX26RWhj6H9eAe0AMlhpdQGfd1yaK3l0Mt4VCm1XSlVrrdwLcWN3XaXK6XOKKUuAdhkk3dd/KFVwFfpFV8AgH5MjwL4b6VUid7i9xa0ir3VKaXU+0opi368PgCsXeOrAESLiItS6qxS6rCd82FrlX4diqBVEI4ppXbo5+Mf0IJFgHY93ABEABClVKZS6uwt7OdTAA/oP+6noo6KhlLqr/rxl0Or0MbWqgz4Qrsn/2E7iaBSapdS6pDemvpvAOtw43X6g1LqmlIqHVq36Fg97QGl1Hf6fXsSWqW+dtolSqkreoXna9R/jSfqz89VaD0sFiulrC3VvwbwrlLqe6WURSm1BloQ5V6b9MuVUrn6M3QvgHb48Rn6P2iVT+txFyqlPlFKlSmlSqAFxmzLXud9cQv3tbUcVgP1Y5qmlPrCphz/0J+BKv05z4HeHV5X3737U9V5XaEFehYrpS4rpfKgPdu13e7xNMSD0IbofFN7hVLqI/3amZVSbwFwhhYEAbTnLEREPJVSpUqp7xq4v4am6wqgvufWE0CBqrsXwVl9PZRS3wA4D8Da22QigGyl1K0ELwHgDLRAyu1IAfC0iHiJiDeAufpyzrBO1EYcPHiwfVVVFbp3724uKipy9PT0rHR2dlabNm1yO3PmjJO99B06dFCDBw8uevbZZwOmT59eAABlZWUOAODt7W0uKipy2LRpUxfbNL/5zW8Khg0bVjRmzJhelZV3+gjSpsEAAhHVNk4p1Vkp1VMpNVuvQPSEVpE5K1rX6yvQKlrdbNLl1pFXvm1FGdqYf18AEJGRIvKdiFzS8xsF/ceprrDWj9gyAK4AvKC9QcZ2f6fsHJNtNzVrPtDLUp2PXlbbib+6iUiyaEM2iqG1KNqWsb6865IO4DkAKSLSx2a5J7SWatvjOAWtV8AN+1FKlekfXZVSV6EFHxKhXZ/NIhJRTxlqO2/z+Vod3131fe6E1rq9AsB50SY369TQnej30WZoY5Q99QpINRFxFJEletfxYgAn9VW253s0ABdo3cht094j2pCGiyJSBO1cNOg6iUiYaF3/z+n7XdzQtDfxd/356QCtJXiq/A31kpcAACAASURBVDg8pyeA+dZnSL/v/aE/Ezrb+9oXdT9D1uPuICLvijbkpRhAKoDOIuJY333RwPu6ruc5EcBepdTXtgtFZKr8OCzjCrRhT7b51Xnv1pH/7WjQs43GPZ6G+D204NBntXqYQLShWZmiDdW5Aq2ngzX/mdCCjFmiDSEa08D9NTRdIbQAzs0UAPCUuue+8NHXW9n2KvoV7Ady69IDwCXghkk0AxqQ9lVoPeTSAOyF1lunElrgmohaKescCBEREcZJkyYF/+UvfzlpMBjwxBNPXEpPT+8YHR0d+dFHH3kEBQXVNXTpBlOnTr0EAOPHjy8GAE9PT8vkyZMvGo3GqJEjR4bExsZerZ3m5ZdfPh8bG1s2fvz4IIvF0rgHeBdoFZM0EVGrlwvtx7DnTVqmAG3yrNp6iIjYVIAC8GOX7U+g/fjcqJSqFJHPULM76s1chDaUwh9Alk2+t+MsANsx42L7HVo3bwXtlZCFerf4pNvcFwBAKfW2fvzbReQBvQdFAbQfvj2hd3eHdkz5DcxzG4BtenfiVwC8D6119SpqtsZ5/8SyLwewXES6QesivQBaRamh1kKb/+EPdax7DMAvoXWxPgmtUnUZNe+J96ENQ9kiIiP0SjKgdQNPgtZd/7qI/AkNr/D9BVolJEEpVSIizwCYcAvHdFNKqZMikgKta/e70J6jV5VSr9aXzObzWdT9DB3TP8+H1nJ9j1LqnIjE6cci+v5vdl805L6u63lOBLBQRJYppeYBgIj01PP9BbSu/RYRSUPDnuWmZH22rc+Tfx3b3M7x1HVe6nIVWlB0O4D/E5Hx+t+5gQAW6vkfVkpViUj1fa6UygGQINr8J+P1tF1R61nWey15Wb/fLJ3NM2K1A8ArItKxjnWANoSpXM+jehiEPiRmJIAXbLZdC23YyH3QestMbOC5sebpD6AvtAkbobTJMxtMD0rO0f9BRJ4EcEDv6UJEDdCQ1y42NovFUuc+fXx8zGlpaVl1rcvJyanuWblo0SLbhg7s3r3bNSEhocBg+LFau3z58jN1TZC4b9++6tdFLlu2jBMo3ib2QCAiu/Su6l8CeEu0V4A5iDYRW+1uz7V1AzBXRNqJyCPQxltvgdba7gw9GCDapGrDGlgWC7TxuS/rLbBGANNu78iwGUBv0V4paADwFGpWst2gDZ24IiI9oFWYfzKl1P9AG7O8Q0TC9WP6O4BXRZsgsCeAZ6G1DNdLRLqLyFj9B365Xl7rD+g0AINEJEC0oQD/fbtlFpH+ekt/O2iVmes2+2mo3dDGUL9Txzo3aOUvhFZRWnyTPOZAGwrzhV4xtqa9pAcP4qEFIxrKDUAxgFK9hX7WLaStl2gTGo6ANmEmoFVME/XzKCLSUbQJIN1uksW30IJlc0WbUHE8anald4PWS+SKaHOLWOersHdf3O59XaIfzyARWaIv6witUn1R3+/j0CdebWF/B/Dfok002QN6JbOW2zme89DG2dvtWqsPKxkBrTfE3/RKvxu0a3oRgEFEXoQ2Dwz0/U0RES+lzY9iHfpigTYcor1+v7SD1pPHuQHpavtfaIGsT0SbPNJBtIlTXxCRUUobyvQHAO+IyAj9b3cgtOFMeXp66/GdgjbUbR2A7UqpBk1Ipv/dHgxtHpR90P5PuNm2TqLNDyEA2olIe/lxctkeIuKrP0v3QgtmvnSzvIjozjN06NBeycnJXZ9//nn2PGpGDCAQUUNNxY8Twl2GNvlgfV1hAW2ywFBoLeyvQptQrFD/YT0X2o/8y9AqfJ/fNJcbzYHWVfkcgNXQJpK7ZUqpAgCPQJvYrRCAEdqkXtbJ/f4A7dVgRdCCDRvqyOa2KKX+COADAF+J9laI/4JWMT8O7Uf536BNuGePA7SW6DPQugIPhj4JoFJqO4D1AP4N4ACAL26SR0N0glYBvgytG30hgDdvJQOl+Upp80XUtlbPNx/aPVbnGG69Jf5JaJWgjXrlYjaARSJSAuBFNHziOUAbUvIYtMrk+9DO10/xqLUbNrT5Cr6B3uNCKbUf2jwISdDO41HUM+mmUqoCWkvwdH37R1HzHvwTtCEdBdDOl+3r8256X+An3NdKm89hKICRIvJHpZQJ2nwd30KrXPdGHeP+W8AiaBXeE9Ba3f8PN07aeTvHY32DyjkRKaidXz35h0G7x7dBG7ufDe1+v46awytGADis3z9vA5iklLquV+xnQ/ubkQ/tb0WevXR1lKccWi+fLGi9I4qhVeI9of29tgY4X4D2fBfry3MB/EJPb2sNtJ5TDZk8MUl/Rs9Du3c/ATBC1ZxMtrYvoQXJBgB4T/88SF/XC9rQhat6OZ5XSn3ZgHIQ0R1i+/btx7Kzs00+Pj71vv2FGpfUHFpJRHT30lu28gBMrj0umojaLhGZBa1Sba/XFBHRHSs9Pf1kbGys3eAnkVV6erpnbGxsoO0y9kAgoruaiAwXkc76vAQvQOsq29CZz4moFRIRHxH5ud5FPxxab4xPW7pcREREbR0nUSSiu9190IYLWIdnjKv16joianucoE1cGQRtToBkAH9u0RIRERHdARhAIKK7mlLqZQAvt3AxiKgR6RP8tYbJHImIiO4oHMJARERERERETW7hwoXeISEhUWFhYcaIiAjjzp07OzbXvhctWtStpKSkzvpvfHx8eGBgYHRERIQxODg46s0332zo66B/smeffdb3xRdf7N5c+/up2AOBiIiIiIjoLrMicWffxszvqZVDDtS3fseOHR23bdvW+dChQyYXFxd19uxZQ3l5uTRmGerz7rvvdv/1r399yc3Nrc63v6xdu/b4oEGDys6fP+8YGhrae86cOYXt27fnGwdqabEAgqenpwoMDGyp3RMREREREd01/ud//gcmk6lnU+VvMpluCEiUl5eb+/Tpkw4A+fn57Tw8PMwuLi4KAGxfv/jcc8/5bN26tXN5eblDv379Sj/++ONTDg4OiI+PD+/bt2/pP//5z04lJSWOK1euPDlixIjSkpISh0cffTTw6NGj7UNDQ6/n5uY6JSUlnR40aFDZ5MmTA9LT0ztev37d4aGHHrq8bNmyM6+88kq3CxcutBs8eHBYly5dzN9//332zY6juLjY0cXFpcpgMCgAqCs/AOjRo0fviRMnFm7bts3dbDbL+vXrj8fExFwPDg6O/vbbb7N8fX3NFosFQUFB0d9//33W119/3XHJkiU+lZWVDl26dDGvX7/+uL+/f41XUL711lueGzdu7LJly5ajrq6urTJ40WIBhMDAQOzfv7+ldk9ERERERHTXyMzMRGRkZPX3r3GuUfM3Go03LMvIyKiwfh43blzxa6+95hsYGBh9//33FyckJFwaPXp0KQAsWLDgwptvvnlW3y4oOTnZ/bHHHisCALPZLIcOHcpcv369+6JFi3xHjBiR/cYbb3h17tzZkp2dbfrXv/7V/r777ouy7mfp0qX53bt3t5jNZgwYMCD8+++/d/nd73534S9/+Uv33bt3Z9sGLmxNnTo12MnJqer06dPt//jHP542GAw3ze+ee+65BgCenp5mk8mUuWTJEq8lS5Z0X79+/akJEyYUfvDBBx4vvvjihY0bN3aKjIy85uPjYx46dGjppEmTshwcHLB06VLPRYsWeb///vt51v0vXrzYa8eOHe7btm07ag2ytEacA4GIiIiIiIialLu7e1VGRoYpKSnplJeXl3natGm9li9f3hUAUlJS3GJiYiLCwsKMe/fudcvIyHCxpnvkkUcuA8CAAQOu5uXlOQHA3r17XRMSEi4BQP/+/a+HhYWVWbdfs2aNh9FojDQajcacnJz26enp7RtSvrVr1x7Pzs42HT9+/N9JSUne2dnZTvbye+yxxy4DQHx8fFlubq4zAMyaNasgOTm5KwD89a9/9Zw+fXoBAJw4ccJp4MCBoWFhYcbly5d7Z2VlVR/j+vXru3755ZfuKSkpx1pz8ABgAIGIiIiIiIiagcFgwJgxY0qWLVt25o033jj92WefdSkrK5P58+f33LBhw7Hs7GzTlClTCq5fv15dT7XOQ2AwGGCxWAQAlKq7jp2VleWUlJTUfffu3dnZ2dmmIUOGFNnm1RC+vr7m6OjostTU1I728rMpmzKbzQIAISEhlZ6enubPP//c7eDBgx0feeSRIgCYM2dOwOzZsy9kZ2ebkpKSTpWXl1fnEx4efi0vL8/5xIkT7W6lrC2BAQQiIiIiIiJqUunp6c6HDh1ytn4/ePCgi5+fX0VZWZkDAHh7e5uLioocNm3a1MVeXgMGDChNTk7uAgAHDhxon52d7QIAly9fdnRxcany8PCw5ObmGnbt2uVuTdOxY0dLUVGR3fpvSUmJw+HDhzuEh4eX15dffWbMmHHxiSeeCBo7duwl61CIkpISx4CAgEoAWL16dVfb7ePi4spWrFhxauzYsSEnT55s1UEEvoWBiIiIiIiImlRxcbHj3LlzA4qLix0dHR1VYGBg+Zo1a055enpaJk+efNFoNEb5+flVxMbGXrWX14IFCy5OnDgxMCwszBgdHV0WHh5+rUuXLpbevXuXR0dHl4WGhkYFBASU9+3bt9SaZtq0aQUjR44M7datW2VdkyhOnTo1uH379lUVFRUyadKkgoEDB5YBwM3yq09CQkLRnDlzHJ988slC67Lf/va3ZxISEnp17969ol+/fldPnz7tbJtm+PDhpa+99lreyJEjQ3fu3HnTuRpamtys+0dT69evn+IkikRERERERE2v9iSKzSEjI6MsOjo6s7HzNZvNqKiokA4dOqjDhw87Dxs2LOzYsWMZreW1i6mpqR3mzZvnf+DAgSMtXZafIj093TM2NjbQdhl7IBAREREREVGbUVJS4jBw4MDwyspKUUph2bJlp1pL8OCFF17wXr16tdeqVatOtHRZmgIDCERERERERNRmdOnSpSojI6PRezY0hsWLF59bvHhx474jsxXhJIpUbcaMGejWrRuio6PrXK+Uwty5cxESEoKYmBj88MMPzVxCakt4P7VevDZ3H15zIg2fhdaF14Oo7WEAgapNnz4dW7duven6lJQU5OTkICcnB++99x5mzZrVjKWjtob3U+vFa3P34TUn0vBZaF14PZpfS81/R21PVVWVAKiqvZwBBKo2aNAgeHh43HT9xo0bMXXqVIgI7r33Xly5cgVnz55txhJSW8L7qfXitbn78JoTafgstC68Hs2rffv2KCwsZBCB7KqqqpKLFy+6A8iovY5zIFCD5efnw9/fv/q7n58f8vPz4ePj04KloraK91PrxWtz9+E1J9LwWWhdeD0al5+fH/Ly8nDx4sVm2+e5c+cMFovFs9l2SI2lCkCG2Wx+ovYKBhCoweqKVopIC5SE7gS8n1ovXpu7D685kYbPQuvC69G42rVrh6CgoGbdp9FoPKSU6tesO6UmxSEM1GB+fn7Izc2t/p6XlwdfX98WLBG1ZbyfWi9em7sPrzmRhs9C68LrQdT6MIBADTZ27FisXbsWSil89913cHd3Zxcyum28n1ovXpu7D685kYbPQuvC60HU+nAIA1VLSEjArl27UFBQAD8/P/zhD39AZWUlACAxMRGjRo3Cli1bEBISgg4dOmDVqlUtXGJqzXg/tV68NncfXnMiDZ+F1oXXg6jtEXuzcIrIXwGMAXBBKXXDS1pFG4j0NoBRAMoATFdK2X1Ja79+/dT+/ftvq9BE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s6dJy0bUlnEIAxERERERERHZxQACEREREREREdnFAAIRERERERER2cU5EIiIiIiI6M7wsvtPSFvUeOUgukOxB0Ibt3XrVoSHhyMkJARLliy5YX1RUREeeughxMbGIioqCqtWraped+XKFUyYMAERERH44/rHcfzc4eYsOhEREREREbUhDCC0YRaLBU899RRSUlJgMpmwbt06mEymGtusWLECRqMR6enp2LVrF+bPn4+KigoAwNNPP40RI0YgKysL/z3hPXh36dkSh0FERERERERtAAMIbdi+ffsQEhKC4OBgODk5YdKkSdi4cWONbUQEJSUlUEqhtLQUHh4eMBgMKC4uRmpqKmbOnAkAMDi2Qwdn15Y4DCIiIiIiImoDGEBow/Lz8+Hv71/93c/PD/n5+TW2mTNnDjIzM+Hr64vevXvj7bffhoODA44fPw4vLy88/vjj6NOnDz7e/SbKK6819yEQERERERFRG8EAQhumlLphmYjU+L5t2zbExcXhzJkzSEtLw5w5c1BcXAyz2YwffvgBs2bNwsGDB+FsaI/tacnNVXQiIiIiIiJqYxhAaMP8/PyQm5tb/T0vLw++vr41tlm1ahXGjx8PEUFISAiCgoKQlZUFPz8/+Pn54Z577gEAxAUPQm5BTrOWn4iIiIiIiNoOBhDasP79+yMnJwcnTpxARUUFkpOTMXbs2BrbBAQE4KuvvgIAnD9/HkeOHEFwcDC8vb3h7++PI0eOAACO5B+Ed2dOokhERERERER1M7R0Aej2GQwGJCUlYfjw4bBYLJgxYwaioqKwcuVKAEBiYiJ+//vfY/r06ejduzeUUnj99dfh6ekJAHjnnXcwefJkVFRUQErcMOWB/9eSh0NEREREREStGAMIbdyoUaMwatSoGssSExOrP/v6+uLLL7+sM21cXBz2798PAFiRuLPpCklERERERERtHocwEBEREREREZFdDCAQERERERERkV0MIBARERERERGRXZwD4Q6SGRF5+4kfWNF4BSEiIiIiIqI7DnsgEBEREREREZFdDCAQERERERERkV0MIBARERERERGRXQwgEBEREREREZFdDCAQERERERERkV0MIBARERERERGRXQwgEBEREREREZFdDCAQERERERERkV0MIBARERERERGRXQwgEBEREREREZFdDCAQERERERERkV0MIBARERERERGRXQwgEBEREREREZFdDCAQERERERERkV0MIBARERERERGRXQwgEBEREREREZFdDCAQERERERERkV0MIBARERERERGRXQwgEBEREREREZFdDCAQERERERERkV0MIBARERERERGRXQ0KIIjICBE5IiJHReT5Ota7i8gmEUkXkcMi8njjF5WIiIiIiIiIWordAIKIOAJYAWAkACOABBEx1trsKQAmpVQsgAcAvCUiTo1cViIiIiIiIiJqIQ3pgRAP4KhS6rhSqgJAMoBf1tpGAXATEQHgCuASAHOjlpSIiIiIiIiIWkxDAgg9AOTafM/Tl9lKAhAJ4AyAQwCeVkpV1c5IRJ4Ukf0isv/ixYu3WWQiIiIiIiIiam4NCSBIHctUre/DAaQB8AUQByBJRDrdkEip95RS/ZRS/by8vG65sERERERERETUMhoSQMgD4G/z3Q9aTwNbjwPYoDRHAZwAENE4RSQiIiIiIiKiltaQAMK/AISKSJA+MeIkAJ/X2uY0gF8AgIh0BxAO4HhjFpSIiIiIiIiIWo7B3gZKKbOIzAGwDYAjgL8qpQ6LSKK+fiWAPwJYLSKHoA15WKiUKmjCchMRERERERFRM7IbQAAApdQWAFtqLVtp8/kMgGGNWzQiIiIiIiIiai0aMoSBiG7B1q1bER4ejpCQECxZsuSG9W+88Qbi4uIQFxeH6OhoODo64tKlSwCAK1euYMKECYiIiEBkZCS+/fbb5i4+ERERERFRnRhAIGpEFosFTz31FFJSUmAymbBu3TqYTKYa2yxYsABpaWlIS0vDa6+9hsGDB8PDwwMA8PTTT2PEiBHIyspCeno6IiMjW+IwiIiIiIiIbsAAAlEj2rdvH0JCQhAcHAwnJydMmjQJGzduvOn269atQ0JCAgCguLgYqampmDlzJgDAyckJnTt3bpZyExERERER2cMAAlEjys/Ph7//j2899fPzQ35+fp3blpWVYevWrXj44YcBAMePH4eXlxcef/xx9OnTB0888QSuXr3aLOUmIiIiIiKyhwEEokaklLphmYjUue2mTZvw85//vHr4gtlsxg8//IBZs2bh4MGD6NixY51zKBAREREREbUEBhCIGpGfnx9yc3Orv+fl5cHX17fObZOTk6uHL1jT+vn54Z577gEATJgwAT/88EPTFpiIiIiIiKiBGEAgakT9+/dHTk4OTpw4gYqK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\n",
      "text/plain": [
       "<Figure size 1152x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize=(16, 8))\n",
    "\n",
    "ax.bar(x, y1, width, label='Sangat Tidak Banyak')\n",
    "ax.bar([i + width for i in x], y2, width, label='Tidak Banyak')\n",
    "ax.bar([i + width*2 for i in x], y3, width, label='Sedang')\n",
    "ax.bar([i + width*3 for i in x], y4, width, label='Banyak')\n",
    "ax.bar([i + width*4 for i in x], y5, width, label='Sangat Banyak')\n",
    "\n",
    "ax.set_xticks([i + 3 * width for i in x])\n",
    "ax.set_xticklabels(confirmed.index)\n",
    "ax.set_title('Perbandingan Konsumsi Makanan Berdasarkan Tingkat Kasus COVID-19')\n",
    "\n",
    "for i,v in enumerate (y1):\n",
    "    plt.text(x[i]-0.10, v+0.01, str(round(v,2)))\n",
    "for i,v in enumerate (y2):\n",
    "    plt.text(x[i]+0.05 , v+0.01, str(round(v,2)))\n",
    "for i,v in enumerate (y3):\n",
    "    plt.text(x[i]+0.13 , v+0.01, str(round(v,2)))\n",
    "for i,v in enumerate (y4):\n",
    "    plt.text(x[i]+0.22 , v+0.01, str(round(v,2)))\n",
    "for i,v in enumerate (y5):\n",
    "    plt.text(x[i]+0.35 , v+0.01, str(round(v,2)))\n",
    "fig.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "FIul1KSeoMsh"
   },
   "source": [
    "Expected output:\n",
    "![Expected Output:](https://drive.google.com/uc?id=11x5OMAB8mbZurD0qntxcwOcWYCQSegy8)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "KZJq0YxNp7bM"
   },
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "LoJ9IXHBp890"
   },
   "source": [
    "# Soal 6: Scatter plot\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "5sQPxjyIrrkM"
   },
   "source": [
    "Buatlah visualisasi scatter plot dari df_food antara Supply Sayuran ('Vegetal Products') dan persentase terkonfirmasi ('Confirmed') COVID-19 sesuai expected output dengan ketentuan berikut:\n",
    "\n",
    "\n",
    "* Gunakan kolom persentase kematian ('Death') sebagai ukuran pointnya kalikan suatu angka yang cukup besar agar terlihat.\n",
    "    \n",
    "* Gunakan kolom persentase produk hewani ('Animal Products') sebagai warna point, berikan colormap 'viridis'."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "8-nxlX2zp8Lw"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1296x864 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize=(18, 12))\n",
    "\n",
    "# Code here\n",
    "sb_x = df_food['Vegetal Products']\n",
    "sb_y = df_food['Confirmed']\n",
    "a = df_food['Deaths']\n",
    "b = df_food['Animal Products']\n",
    "\n",
    "axmap = ax.scatter(sb_x, sb_y, sizes = a*100000, c = b, alpha = 0.6)\n",
    "\n",
    "ax.set_title(\"Healthy Food and Covid-19\")\n",
    "ax.set_ylabel('Covid-19 case confirmed')\n",
    "ax.set_xlabel('Supply Vegetal Products')\n",
    "\n",
    "fig.colorbar(axmap)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "aBr40jb0uXSg"
   },
   "source": [
    "Expected output:\n",
    "![Expected Output:](https://drive.google.com/uc?id=1wJh3tfkPbrkf3_F73RW0kABBt_NO8q53)"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "collapsed_sections": [],
   "name": "Quiz Pekan - 3.ipynb",
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
